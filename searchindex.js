Search.setIndex({"docnames": ["api/calculators", "api/dislocation", "api/elasticity", "api/fracture_mechanics", "api/neighbours", "api/numerical", "api/root", "api_reference", "calculators", "elastic_constants", "fracture_mechanics", "index", "matscipy", "matscipy.calculators", "matscipy.calculators.eam", "matscipy.calculators.manybody", "matscipy.calculators.mcfm", "matscipy.calculators.mcfm.mcfm_parallel", "matscipy.calculators.mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.qm_cluster_tools", "matscipy.calculators.pair_potential", "matscipy.calculators.supercell_calculator", "matscipy.contact_mechanics", "matscipy.fracture_mechanics", "modules", "plasticity"], "filenames": ["api/calculators.rst", "api/dislocation.rst", "api/elasticity.rst", "api/fracture_mechanics.rst", "api/neighbours.rst", "api/numerical.rst", "api/root.rst", "api_reference.rst", "calculators.rst", "elastic_constants.rst", "fracture_mechanics.rst", "index.rst", "matscipy.rst", "matscipy.calculators.rst", "matscipy.calculators.eam.rst", "matscipy.calculators.manybody.rst", "matscipy.calculators.mcfm.rst", "matscipy.calculators.mcfm.mcfm_parallel.rst", "matscipy.calculators.mcfm.neighbour_list_mcfm.rst", "matscipy.calculators.mcfm.qm_cluster_tools.rst", "matscipy.calculators.pair_potential.rst", "matscipy.calculators.supercell_calculator.rst", "matscipy.contact_mechanics.rst", "matscipy.fracture_mechanics.rst", "modules.rst", "plasticity.rst"], "titles": ["Calculators", "Dislocation", "Elasticity", "Fracture Mechanics", "Neighbour lists", "Numerical", "Matscipy root", "API Reference", "Calculators", "Elastic Constants", "Fracture Mechanics", "Matscipy", "matscipy package", "matscipy.calculators package", "matscipy.calculators.eam package", "matscipy.calculators.manybody package", "matscipy.calculators.mcfm package", "matscipy.calculators.mcfm.mcfm_parallel package", "matscipy.calculators.mcfm.neighbour_list_mcfm package", "matscipy.calculators.mcfm.qm_cluster_tools package", "matscipy.calculators.pair_potential package", "matscipy.calculators.supercell_calculator module", "matscipy.contact_mechanics package", "matscipy.fracture_mechanics package", "matscipy", "Plasticity"], "terms": {"matscipi": [1, 2, 4, 5, 7, 8, 9, 10, 25], "make_screw_cyl": [1, 7], "alat": 1, "c11": [1, 2, 12, 23], "c12": [1, 2, 12, 23], "c44": [1, 2, 12, 23], "cylinder_r": 1, "10": [1, 4, 12, 16, 19, 23], "cutoff": [1, 4, 12, 14, 18, 20, 23], "5": [1, 2, 4, 12, 14, 16, 23], "hard_cor": 1, "fals": [1, 2, 4, 12, 14, 16, 17, 19, 20, 21, 23], "center": [1, 23], "0": [1, 2, 4, 12, 14, 15, 16, 18, 19, 20, 21, 23], "l_extend": 1, "symbol": [1, 4, 12, 14, 18], "w": [1, 2, 12, 14, 15, 20, 23], "make": [1, 12, 18, 19], "screw": 1, "us": [1, 2, 4, 5, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23], "atomman": 1, "librari": [1, 12], "paramet": [1, 2, 4, 5, 6, 7, 14, 16, 17, 18, 19, 20, 21, 23, 24], "float": [1, 2, 4, 5, 12, 14, 18, 19, 20, 23], "lattic": [1, 4, 12, 14, 23], "constant": [1, 2, 11, 12, 14, 20, 23], "materi": [1, 11, 12, 14], "elast": [1, 7, 11, 14, 20, 23, 24], "radiu": [1, 4, 12], "cylind": [1, 23], "unconstrain": 1, "atom": [1, 2, 4, 5, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23], "around": [1, 11, 12, 19], "angstrom": 1, "potenti": [1, 4, 11, 12, 14, 15, 16, 17, 19, 20, 23], "marinica": 1, "f": [1, 12, 14, 15, 16, 20, 23], "4": [1, 4, 12, 14, 16, 20, 23], "bool": [1, 2, 5, 6, 12, 14, 16, 17, 18, 19, 20, 21, 23], "descript": [1, 8, 12], "type": [1, 2, 4, 6, 12, 14, 16, 18, 19, 23], "The": [1, 2, 4, 11, 12, 14, 15, 16, 19, 20, 21, 23], "posit": [1, 2, 4, 12, 14, 16, 19, 21, 23], "core": [1, 12, 16, 19], "fixatom": 1, "condit": [1, 4, 12, 23], "extens": [1, 14, 20], "box": [1, 4, 5, 12, 14, 20], "creation": [1, 12], "initi": [1, 2, 4, 12, 15, 16, 18, 20, 23], "equival": [1, 12], "final": [1, 12, 15, 16], "string": [1, 2, 4, 12, 14, 20], "element": [1, 4, 12, 14, 18], "pass": [1, 2, 12, 14, 16, 21, 23], "ase": [1, 2, 4, 5, 11, 12, 14, 17, 18, 19, 20, 23], "cubic": [1, 2, 4, 12, 23], "simplecubicfactori": 1, "default": [1, 2, 4, 6, 12, 14, 16, 20, 21, 23], "i": [1, 2, 4, 5, 6, 11, 12, 14, 15, 18, 19, 20, 21, 23], "tungsten": 1, "return": [1, 2, 4, 5, 6, 14, 15, 16, 18, 19, 20, 21, 23], "object": [1, 2, 4, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23], "bulk": [1, 2, 12, 23], "disk": 1, "gener": [1, 2, 4, 11, 12, 14, 16, 19, 20], "u": [1, 12, 15, 23], "np": [1, 2, 4, 12, 14, 16, 17, 18, 19, 21, 23], "arrai": [1, 2, 4, 12, 14, 16, 17, 18, 19, 20, 23], "displac": [1, 2, 5, 7, 12, 14, 16, 20, 21, 23], "per": [1, 4, 12, 14, 16, 19, 23], "make_edge_cyl": [1, 7], "edg": 1, "plot_vitek": [1, 7], "dislo": 1, "3": [1, 4, 12, 14, 16, 18, 19, 21, 23], "16": [1, 12, 20], "plot_ax": 1, "none": [1, 2, 4, 5, 6, 12, 14, 16, 17, 19, 20, 21, 23], "xyscal": 1, "plot": [1, 2, 12, 14, 16, 20, 21, 23], "vitek": 1, "map": [1, 4, 12], "from": [1, 2, 4, 5, 6, 11, 12, 14, 16, 18, 19, 20, 21, 23], "configur": [1, 2, 4, 5, 12, 14, 18, 20, 23], "correspond": [1, 2, 4, 12, 14, 20], "neighbour": [1, 7, 11, 14, 16, 18, 19, 20, 23, 24], "list": [1, 2, 7, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23], "matplotlib": [1, 2, 12, 23], "ax": [1, 12, 23], "exist": [1, 6, 12], "allow": [1, 12, 23], "have": [1, 2, 4, 12, 14, 15, 16, 20, 21, 23], "full": [1, 2, 12, 14, 23], "control": [1, 6, 12], "graph": 1, "outsid": [1, 4, 12, 18], "function": [1, 2, 4, 11, 12, 14, 15, 16, 17, 19, 20, 23], "possibl": [1, 2, 4, 12], "multipl": [1, 12, 16, 23], "differenti": 1, "subplot": [1, 23], "new": [1, 12, 14, 19, 23], "creat": [1, 4, 12, 14, 16, 19, 20, 21, 23], "plt": [1, 23], "show_neb_configur": [1, 7], "imag": [1, 4, 12, 24], "7": [1, 12, 14], "show": [1, 12, 23], "true": [1, 2, 4, 5, 6, 12, 14, 16, 18, 19, 20, 21, 23], "core_posit": 1, "exampl": [1, 4, 12, 14, 16, 18, 19, 20, 21, 23], "along": [1, 2, 12, 14], "neb": 1, "path": [1, 12], "figur": 1, "after": [1, 2, 12, 14, 16, 20, 23], "x": [1, 2, 4, 12, 14, 15, 16, 23], "y": [1, 2, 4, 12, 14, 16, 23], "If": [1, 2, 4, 12, 14, 16, 18, 19, 20, 21, 23], "els": [1, 20, 23], "show_configur": [1, 7], "fixed_mask": 1, "fix": [1, 12, 23], "get_elastic_const": [1, 7, 14, 20], "pot_path": 1, "delta": [1, 2, 12, 14], "01": [1, 2, 12, 23], "44": [1, 2, 12], "make_barrier_configur": [1, 7], "elastic_param": 1, "kwarg": [1, 2, 12, 14, 16, 20, 21, 23], "fixedatom": 1, "constrain": [1, 23], "region": [1, 16, 19, 23], "ar": [1, 2, 4, 11, 12, 14, 15, 18, 19, 20, 21, 23], "averag": [1, 12, 14, 19, 23], "between": [1, 4, 12, 14, 23], "file": [1, 2, 6, 12, 14, 16, 20, 21, 23], "hard": [1, 20], "soft": [1, 20], "chosen": [1, 2, 12], "field": [1, 10, 12, 14, 23, 25], "revers": [1, 4, 12], "keyword": [1, 12, 14, 16, 20, 21, 23], "argument": [1, 2, 12, 14, 21, 23], "disloc_ini": 1, "disloc_fin": 1, "perfect": 1, "make_screw_cyl_kink": [1, 7], "40": [1, 12], "kink_length": 1, "26": 1, "kind": [1, 12, 14], "doubl": [1, 4, 12, 19], "kink": [1, 23], "base": [1, 2, 4, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24], "agreement": 1, "quadrupol": 1, "term": [1, 14, 20], "format": [1, 4, 12, 14, 20], "energi": [1, 4, 12, 14, 15, 16, 17, 19, 20, 21, 23], "singl": [1, 2, 4, 12, 14, 16, 18, 19], "provid": [1, 6, 11, 12, 16, 18, 19, 23], "correct": [1, 2, 12, 14, 20], "stabl": [1, 12], "structur": [1, 2, 12, 14, 16, 17, 19, 20, 21, 23], "access": [1, 12, 16], "int": [1, 2, 4, 12, 14, 16, 17, 18, 19, 20, 23], "length": [1, 4, 12, 14, 23], "b": [1, 2, 12, 14, 20, 23], "unit": [1, 2, 12, 14, 21, 23], "must": [1, 4, 12, 14, 16, 18, 20, 21, 23], "even": [1, 2, 12, 14, 20], "right": [1, 14, 15, 23], "left": [1, 12, 14, 15, 23], "reference_straight_disloc": 1, "straight": 1, "large_bulk": 1, "larg": [1, 12], "slice_long_dislo": [1, 7], "kink_bulk": 1, "slice": [1, 12], "long": [1, 12, 18], "perform": [1, 12, 14, 16, 17, 21, 23], "analysi": [1, 11], "burger": 1, "should": [1, 2, 12, 14, 16, 19, 20, 21, 23], "z": [1, 2, 4, 12, 16, 23], "direct": [1, 2, 4, 12, 14, 16, 20, 21, 23], "sliced_kink": 1, "sliced_bulk": 1, "1": [1, 2, 4, 11, 12, 14, 15, 16, 18, 19, 20, 23], "each": [1, 2, 4, 12, 14, 16, 19, 20, 23], "disloc_z_posit": 1, "compare_configur": [1, 7], "dislo_ref": 1, "bulk_ref": 1, "print_info": 1, "remap": 1, "bulk_neighbour": 1, "origin": [1, 2, 12, 19, 23], "compar": [1, 12], "two": [1, 12, 14, 18, 19, 23], "gradient": [1, 2, 12, 14, 15, 20, 23], "bond": [1, 4, 12, 15, 16, 19, 23], "neghbour": 1, "comparison": [1, 2, 12], "coreself": 1, "global": [1, 2, 4, 5, 12, 14, 18, 20], "flag": [1, 12, 16, 19, 24], "switch": 1, "print": [1, 2, 4, 12, 16, 19, 23], "statement": 1, "about": [1, 2, 11, 12, 16, 23], "swtich": 1, "off": [1, 16, 19, 23], "deform": [1, 5, 12, 14, 20, 23], "onli": [1, 2, 4, 5, 12, 14, 15, 16, 18, 19, 20, 23], "set": [1, 2, 11, 12, 14, 16, 19, 20, 21, 23, 24], "thi": [1, 2, 4, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23], "order": [1, 2, 4, 11, 12, 14, 20], "same": [1, 4, 12, 14, 23], "option": [1, 2, 4, 6, 11, 12, 14, 20, 21, 23], "tupl": [1, 4, 12], "bulk_i": 1, "bulk_j": 1, "coordin": [1, 4, 12, 14, 23], "x0": [1, 2, 12, 14, 20, 23], "y0": [1, 23], "du": 1, "norm": [1, 2, 12, 14, 20, 24], "differ": [1, 4, 5, 12, 14, 16, 17, 20, 21, 23], "cost_funct": [1, 7], "po": [1, 23], "cost": 1, "fit": [1, 2, 12, 14, 23], "analyt": [1, 2, 12], "detect": 1, "minimis": 1, "build": [1, 18], "solut": [1, 2, 12, 14, 20, 23], "contain": [1, 2, 4, 12, 14, 16, 19, 20, 21, 23], "config": [1, 2, 12], "save": [1, 16, 18], "comput": [1, 2, 4, 5, 12, 14, 15, 16, 20, 23], "time": [1, 4, 12, 18, 23], "error": [1, 2, 12, 14, 16, 20, 21, 23], "optimis": [1, 2, 12], "result": [1, 2, 4, 5, 12, 14, 19, 20, 21, 23], "fit_core_posit": [1, 7], "dislo_imag": 1, "core_radiu": 1, "current_po": 1, "stroh": 1, "scipi": [1, 2, 4, 11, 12, 14, 23], "optim": [1, 2, 12, 23], "minim": [1, 23], "powel": [1, 23], "": [1, 2, 4, 8, 9, 10, 11, 12, 14, 23, 25], "method": [1, 2, 12, 14, 16, 18, 20, 21, 23], "like": [1, 12, 14, 16, 20, 21, 23], "core_x": 1, "core_i": 1, "guess": [1, 2, 12, 14, 20, 23], "cach": [1, 12, 14, 16, 20, 21, 23], "neigbbour": 1, "speed": [1, 12, 23], "up": [1, 11, 12, 18, 23], "calcualt": 1, "neighbour_list": [1, 4, 7, 12, 16, 18, 19, 23, 24], "ij": [1, 2, 4, 12, 14, 15], "core_po": 1, "fit_core_position_imag": [1, 7], "call": [1, 2, 12, 14, 16, 18, 20, 21, 23], "e": [1, 2, 4, 12, 14, 15, 16, 20, 21, 23], "g": [1, 2, 12, 14, 15, 20, 23], "shape": [1, 4, 12, 14, 20, 23, 24], "len": [1, 4, 12, 14, 21, 23], "2": [1, 2, 4, 12, 14, 15, 16, 19, 20, 23], "screw_cyl_tetrahedr": [1, 7], "scan_r": 1, "15": [1, 12, 14, 16, 20, 21, 23], "imp_symbol": 1, "h": [1, 4, 12, 14, 15, 23], "tetrahedr": 1, "appli": [1, 2, 4, 12, 19, 23], "an": [1, 2, 4, 9, 12, 14, 16, 19, 20, 21, 23], "lattuc": 1, "elemnt": 1, "hydrogen": [1, 16, 19, 24], "dislocatino": 1, "sign": [1, 12], "flip": 1, "predict": 1, "screw_cyl_octahedr": [1, 7], "octahedr": 1, "class": [1, 2, 4, 12, 14, 15, 16, 18, 19, 20, 21, 23], "bodycenteredcubictetrahedralfactori": [1, 7], "A": [1, 2, 4, 12, 14, 16, 18, 20, 21, 23], "factori": 1, "bcc": [1, 12, 23], "xtal_nam": [1, 7], "bcc_tetrahedr": 1, "bravais_basi": [1, 7], "sequenc": [1, 2, 12, 23], "25": 1, "75": 1, "align": [1, 7, 12, 24], "first": [1, 4, 12, 14, 18, 19, 20, 21, 23], "axi": [1, 2, 4, 12, 14, 16, 20, 21, 23], "second": [1, 4, 11, 12, 14, 20], "plane": [1, 2, 12, 23], "atoms_in_unit_cel": [1, 7], "basis_factor": [1, 7], "calc_num_atom": [1, 7], "check_basis_volum": [1, 7], "check": [1, 2, 4, 12, 14, 16, 19, 20, 21, 23], "volum": [1, 5, 16, 23], "chop_toler": [1, 7], "1e": [1, 2, 5, 12, 14, 16, 20, 21, 23], "convert_to_natural_basi": [1, 7], "convert": [1, 2, 12, 14, 16, 20, 21, 23], "miller": [1, 12, 23], "indic": [1, 4, 5, 12, 14, 16, 18, 19, 23], "natur": 1, "basi": 1, "element_basi": [1, 7], "find_direct": [1, 7], "find": [1, 4, 12, 19, 23], "miss": [1, 12, 14, 21, 23], "specifi": [1, 2, 4, 12, 14, 16, 18, 19, 20, 23], "ones": 1, "find_ortho": [1, 7], "idx": 1, "replac": [1, 12, 14, 19], "ortho": 1, "orthogon": [1, 2, 12], "get_lattice_const": [1, 7], "get": [1, 11, 12, 14, 16, 20, 21, 23], "crystal": [1, 2, 12, 14, 23], "insid": [1, 7, 12], "point": [1, 12, 14], "int_basi": [1, 7], "inverse_basi": [1, 7], "inverse_basis_factor": [1, 7], "make_crystal_basi": [1, 7], "matrix": [1, 2, 4, 5, 12, 14, 16, 20, 23], "system": [1, 2, 4, 12, 14, 16, 20, 21, 23], "make_list_of_atom": [1, 7], "repeat": [1, 12, 24], "make_unit_cel": [1, 7], "other": [1, 4, 7, 12, 14, 16, 19], "print_directions_and_mil": [1, 7], "txt": 1, "process_el": [1, 7], "extract": 1, "number": [1, 2, 4, 12, 14, 16, 17, 18, 20, 21, 23], "put_atom": [1, 7], "place": [1, 12], "given": [1, 2, 4, 12, 14, 16, 18, 19, 20, 23], "its": [1, 2, 12, 14, 19, 20, 21, 23], "integ": [1, 12, 23], "bodycenteredcubicoctahedralfactori": [1, 7], "bcc_octahedr": 1, "dipole_displacement_angl": [1, 7], "w_bulk": 1, "dislo_coord_left": 1, "dislo_coord_right": 1, "shift": [1, 4, 12, 20, 23], "mode": [1, 12, 17, 23], "simpl": [1, 12, 15, 20], "dipol": [1, 12, 14, 21, 23], "ud": 1, "voltera": 1, "angl": [1, 4, 12, 15, 23, 24], "get_u_img": [1, 7], "n_img": 1, "n1_shift": 1, "n2_shift": 1, "displacemnt": 1, "make_screw_quadrupol": [1, 7], "left_shift": 1, "right_shift": 1, "n1u": 1, "effect": [1, 12, 14, 20], "arrang": 1, "work": [1, 2, 11, 12, 14, 16, 20, 21, 23], "dsitanc": 1, "next": [1, 12], "disoc": 1, "need": [1, 4, 12, 14, 15, 16, 19, 20, 21, 23], "odd": 1, "distanc": [1, 4, 12, 14, 15, 18, 20, 23], "main": 1, "disloc_quadrupol": 1, "coodrin": 1, "note": [1, 2, 12, 14, 15, 23], "we": [1, 4, 12, 14, 15, 16, 20, 21, 23], "take": [1, 2, 12, 15, 24], "frac": [1, 14, 15, 23], "bar": [1, 12, 15], "v": [1, 2, 12, 14, 15, 16, 23], "c_1": 1, "n": [1, 4, 12, 14, 20, 23], "u_1": 1, "v_1": 1, "c": [1, 2, 4, 12, 14, 18, 20, 23], "z_1": 1, "c_2": 1, "u_2": 1, "v_2": 1, "z_2": 1, "c_3": 1, "For": [1, 2, 4, 12, 14, 15, 20, 23], "135": 1, "To": [1, 11, 12, 23], "close": [1, 12], "squar": [1, 23], "one": [1, 2, 4, 12, 14, 16, 19, 21, 23], "ha": [1, 2, 6, 12, 14, 18, 20, 21, 23], "approx": 1, "sqrt": [1, 12, 14], "89": 1, "follow": [1, 12, 14, 15, 16, 20, 21, 23], "geometri": [1, 23], "ad": [1, 12, 16, 19], "tilt": 1, "compomemt": 1, "cz1": 1, "cz2": 1, "our": [1, 12], "case": [1, 4, 12, 14, 16, 19, 20, 21, 23], "3n": 1, "easi": 1, "6": [1, 2, 4, 12, 14, 18, 20, 21, 23], "mai": [1, 4, 12, 14, 21, 23], "typo": 1, "paper": 1, "ventelon": 1, "l": [1, 2, 12, 20], "willaim": 1, "j": [1, 2, 4, 12, 14, 16, 20, 23], "peierl": 1, "alpha": [1, 14, 23], "fe": 1, "principl": 1, "cluster": [1, 12, 16, 17, 19, 24], "versu": 1, "approach": [1, 12], "aid": 1, "mater": 1, "de": [1, 4, 12], "2007": 1, "14": [1, 12], "suppl": 1, "85": [1, 4, 12, 18], "http": [1, 2, 11, 12, 14], "doi": 1, "org": [1, 11], "1007": 1, "s10820": 1, "007": 1, "9064": 1, "cai": 1, "2005": [1, 2, 12, 23], "model": [1, 20], "period": [1, 4, 12], "In": [1, 4, 11, 12, 14, 16, 19, 20, 21, 23], "yip": 1, "ed": 1, "handbook": 1, "springer": 1, "dordrecht": 1, "link": [1, 18], "com": [1, 2, 11, 12], "chapter": 1, "978": 1, "4020": 1, "3286": 1, "8_42": 1, "make_screw_quadrupole_kink": [1, 7], "20": [1, 12, 23], "1016": 1, "jnucmat": 1, "2008": 1, "12": [1, 12, 20, 23], "053": 1, "make_edge_cyl_001_100": [1, 7], "a0": [1, 15, 23], "tol": [1, 2, 7, 12, 14, 16, 20, 21, 23, 24], "06": [1, 2, 12, 14, 16, 20, 21, 23], "produc": [1, 12, 19, 23], "consist": [1, 14, 20, 23], "determenit": 1, "size": [1, 2, 4, 5, 12, 14, 17, 20, 23, 24], "toler": [1, 2, 12, 14, 19, 20], "self": [1, 12, 14, 16, 19, 20, 21, 23], "disp": [1, 23], "read_dislo_qmmm": [1, 7], "filenam": [1, 12], "read": [1, 6, 12, 14, 16, 20, 21, 23, 24], "extend": [1, 12, 16], "xyz": [1, 12], "qmmm": [1, 16, 17], "qm": [1, 12, 16, 19], "mm": [1, 16], "constraint": [1, 23], "qm_mask": 1, "dislo_qmmm": 1, "output": [1, 2, 12, 14, 16, 17, 20, 21, 23], "includ": [1, 4, 12, 14, 16, 19, 23], "mask": [1, 4, 7, 12, 23, 24], "plot_bulk": [1, 7], "n_plane": 1, "m": [1, 2, 11, 12, 14, 16, 20, 23], "200": 1, "color": [1, 23], "accord": [1, 2, 4, 12, 19], "non": [1, 2, 5, 12, 14, 15, 16, 19, 20], "ovito_dxa_straight_dislo_info": [1, 7], "replicate_z": 1, "inform": [1, 12, 14, 16, 19, 20, 21, 23], "ovito": 1, "dxa": 1, "current": [1, 12, 14, 16, 20, 21, 23], "version": [1, 11, 12], "1b": 1, "thick": [1, 23], "analys": 1, "replic": 1, "line": [1, 12, 14, 23], "least": [1, 12, 18, 23], "3b": 1, "get_centering_mask": [1, 7], "check_dupl": [1, 7], "closer": 1, "than": [1, 4, 12, 14, 18, 21, 23], "cubiccrystaldisloc": [1, 7], "unit_cel": [1, 12], "unit_cell_core_posit": 1, "pariti": 1, "glide_dist": 1, "self_consist": 1, "__init__": [1, 2, 4, 7, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24], "repres": [1, 12, 16, 17, 19, 23], "defin": [1, 2, 4, 12, 15, 23], "normal": [1, 12, 15, 23], "glide": 1, "valu": [1, 2, 4, 6, 12, 14, 19, 23], "init_stroh": [1, 7], "set_burg": [1, 7], "plot_unit_cel": [1, 7], "250": 1, "bulk_posit": 1, "max_it": 1, "100": [1, 4, 12, 14, 16, 19, 23], "verbos": [1, 2, 12, 14, 19, 20, 21, 23], "build_cylind": [1, 7], "fix_width": 1, "build_glide_configur": [1, 7], "average_posit": 1, "build_impurity_cylind": [1, 7], "impur": 1, "extra_bulk_at_cor": 1, "bccscrew111disloc": [1, 7], "bccedge111disloc": [1, 7], "bccmixed111disloc": [1, 7], "bccedge100disloc": [1, 7], "bccedge100110disloc": [1, 7], "diamondglide30degreeparti": [1, 7], "diamondglide90degreeparti": [1, 7], "cubiccrystaldissociateddisloc": [1, 7], "left_disloc": 1, "right_disloc": 1, "dissoci": 1, "vercor": 1, "b_left": 1, "b_right": 1, "ndarrai": [1, 4, 12, 14], "rais": [1, 12, 14, 16, 18, 20, 21, 23], "valueerror": [1, 12, 14, 18], "sum": [1, 4, 12, 14, 16, 20, 21, 23, 24], "properti": [1, 4, 11, 12, 14, 16, 19, 20, 21, 23], "righ": 1, "partial_dist": 1, "overload": 1, "partial": [1, 11, 12, 14, 15], "sf": 1, "diamondglidescrew": [1, 7], "diamondglide60degre": [1, 7], "fccscrewshockleyparti": [1, 7], "fccscrew110disloc": [1, 7], "fccedgeshockleyparti": [1, 7], "fccedge110disloc": [1, 7], "fixedlineatom": [1, 7], "move": [1, 12, 18, 19, 23], "adjust_posit": [1, 7, 12, 23], "newposit": 1, "adjust_forc": [1, 7, 12, 23], "forc": [1, 2, 5, 12, 14, 15, 16, 20, 21, 23, 24], "gamma_lin": [1, 7], "calc": [1, 21, 23], "shift_dir": 1, "surfac": [1, 23, 24], "factor": [1, 2, 12, 14, 20, 23], "n_dot": 1, "11": [1, 12], "relax": [1, 2, 12, 14, 20, 23], "fmax": [1, 2, 12], "return_imag": 1, "cross": [1, 4, 12, 24], "section": [1, 15], "stack": [1, 4, 12], "fault": 1, "gsf": 1, "gamma": [1, 14], "orient": 1, "variat": 1, "when": [1, 12, 14, 16, 21, 23], "cut": [1, 16, 19, 20], "particular": [1, 12], "part": [1, 12, 14], "quantiti": [1, 4, 12], "relat": 1, "landscap": 1, "data": [1, 4, 12, 14, 16, 17, 19, 24], "out": [1, 12, 19, 23], "equilibrium": [1, 15, 19, 23], "preserv": [1, 12], "state": [1, 12, 14, 16, 20, 21, 23], "more": [1, 4, 12, 14, 15, 16, 18, 19, 21, 23], "detail": [1, 2, 12], "see": [1, 2, 12, 14, 23], "phy": [1, 2, 12, 14, 20], "conden": 1, "matter": 1, "2013": 1, "395502": 1, "15pp": 1, "iopscienc": 1, "iop": 1, "0953": 1, "8984": 1, "39": 1, "construct": [1, 4, 12, 16, 20], "attach": [1, 12, 14, 16, 19, 21, 23], "index": [1, 4, 11, 12, 14, 17, 18, 19], "start": [1, 2, 12, 14, 20, 23, 24], "increas": [1, 12, 23], "maximum": [1, 2, 12, 14, 20], "togeth": 1, "everi": [1, 4, 12, 23], "toten": 1, "ev": [1, 23], "full_3x3_to_voigt_6_index": [2, 7, 12, 24], "voigt_6_to_full_3x3_strain": [2, 7, 12, 24], "strain_vector": [2, 12], "form": [2, 4, 11, 12, 14, 15, 20, 23], "3x3": [2, 4, 12, 23], "strain": [2, 5, 11, 12, 23], "compon": [2, 12, 14, 23], "vector": [2, 4, 5, 12, 14, 15], "voigt": [2, 5, 12, 14, 16, 20, 21, 23], "notat": [2, 5, 12, 14, 16], "voigt_6_to_full_3x3_stress": [2, 7, 12, 24], "stress_vector": [2, 12], "stress": [2, 5, 12, 14, 20, 21, 23], "full_3x3_to_voigt_6_strain": [2, 7, 12, 24], "strain_matrix": [2, 12], "full_3x3_to_voigt_6_stress": [2, 7, 12, 24], "stress_matrix": [2, 12], "voigt_6x6_to_full_3x3x3x3": [2, 7, 12, 24], "represent": [2, 12, 14], "stiff": [2, 7, 12, 15, 24], "3x3x3x3": [2, 12], "array_lik": [2, 4, 12, 14, 20, 23], "6x6": [2, 12, 23], "full_3x3x3x3_to_voigt_6x6": [2, 7, 12, 24], "001": [2, 12, 14, 16, 20, 21, 23], "check_symmetri": [2, 12], "symmetri": [2, 12], "process": [2, 12, 17, 23], "voigt_6x6_to_cub": [2, 7, 12, 24], "cubic_to_voigt_6x6": [2, 7, 12, 24], "invari": [2, 7, 12, 24], "syi": [2, 12], "szz": [2, 12], "syz": [2, 12], "sxz": [2, 12], "sxy": [2, 12], "full_3x3_to_voigt_6": [2, 12], "rotate_cubic_elastic_const": [2, 7, 12, 24], "rotat": [2, 7, 12, 24], "moduli": [2, 12], "standard": [2, 12, 14, 23], "rotate_elastic_const": [2, 7, 12, 24], "cubicelasticmoduli": [2, 7, 12, 24], "complianc": [2, 7, 12, 24], "coeffici": [2, 12, 14, 19, 20], "measure_triclinic_elastic_const": [2, 7, 12, 24], "logfil": [2, 12], "brute": [2, 12], "measur": [2, 5, 12, 14, 20, 23], "triclin": [2, 12], "cell": [2, 4, 12, 14, 16, 21, 23], "doe": [2, 12], "increment": [2, 5, 12, 23], "deriv": [2, 5, 11, 12, 14, 15, 20, 23], "generate_strained_config": [2, 7, 12, 24], "at0": [2, 12], "n_step": [2, 12], "both": [2, 12], "befor": [2, 12, 23], "routin": [2, 11, 12, 18], "determin": [2, 4, 12, 23], "which": [2, 4, 12, 14, 15, 16, 17, 19, 20, 21, 23], "pattern": [2, 12], "necessari": [2, 12, 16, 19], "triclininc": [2, 12], "absolut": [2, 4, 12], "rang": [2, 4, 12], "yield": [2, 12, 14], "instanc": [2, 4, 12, 17, 23], "minima": [2, 5, 12, 14, 20], "conifugur": [2, 12], "requir": [2, 11, 12, 23], "evalu": [2, 9, 12, 17, 23], "c_ij": [2, 12], "under": [2, 12], "assum": [2, 4, 12, 23], "fit_elastic_const": [2, 7, 12, 24], "graphic": [2, 12], "linear": [2, 12, 23], "regress": [2, 12], "either": [2, 4, 12, 14], "intern": [2, 12, 14, 16, 20, 21, 23], "degre": [2, 12, 14, 20, 23], "freedom": [2, 12, 23], "alreadi": [2, 12], "addit": [2, 11, 12, 14, 16, 20, 23], "infom": [2, 12], "qualiti": [2, 12], "summaris": [2, 12], "estim": [2, 12, 23], "pyplot": [2, 12, 23], "curv": [2, 12], "log": [2, 12], "write": [2, 12, 14, 15, 21, 23], "suppress": [2, 12], "dict": [2, 4, 12, 14, 16, 18, 20, 21, 23], "run": [2, 12, 16, 17, 19, 21, 23], "c_err": [2, 12], "stat": [2, 12], "modul": [2, 11, 24], "avail": [2, 8, 12, 14], "obtain": [2, 4, 12, 14, 16, 17, 20, 23], "accuraci": [2, 12], "otherwis": [2, 12], "zero": [2, 12, 14, 15, 20, 21, 23], "code": [2, 12], "adapt": [2, 12], "py": [2, 6, 12], "script": [2, 12], "github": [2, 11, 12], "djw": [2, 12], "youngs_modulu": [2, 7, 12, 24], "calcul": [2, 5, 7, 11, 12, 23, 24], "approxim": [2, 12, 14], "young": [2, 12, 23], "modulu": [2, 12, 23], "e_l": [2, 12], "load": [2, 12], "exact": [2, 12], "answer": [2, 12], "account": [2, 4, 12], "anisotropui": [2, 12], "frame": [2, 12, 23], "cr": [2, 12], "inv": [2, 12], "e_x": [2, 12], "pull": [2, 11, 12, 23], "e_i": [2, 12], "e_z": [2, 12], "formula": [2, 12], "brantlei": [2, 12], "problem": [2, 12], "associ": [2, 12], "semiconductor": [2, 12], "devic": [2, 12], "appl": [2, 12], "534": [2, 12], "1973": [2, 12], "poisson_ratio": [2, 7, 12, 24], "poisson": [2, 12, 23], "ratio": [2, 12, 14, 20, 23], "u_": [2, 12, 14], "lm": [2, 12], "c_": [2, 12, 14], "respons": [2, 12, 16, 19], "dimensionless": [2, 12, 23], "elastic_moduli": [2, 7, 12, 24], "r": [2, 12, 14, 15, 16, 20, 23], "muduli": [2, 12], "shear": [2, 12, 23], "mudulu": [2, 12], "tensor": [2, 12, 14, 20, 23], "3d": [2, 12], "valid": [2, 12], "three": [2, 4, 12, 14, 20, 23], "nu": [2, 12, 14, 23], "gm": [2, 12], "k": [2, 4, 12, 15, 20, 23], "It": [2, 4, 11, 12], "desir": [2, 12], "so": [2, 12, 15, 19], "arbitrari": [2, 12], "infinit": [2, 12], "o": [2, 12], "rand": [2, 4, 12], "rovenski": [2, 12], "anisotrop": [2, 12, 23], "birkh": [2, 12], "auser": [2, 12], "pp": [2, 12], "71": [2, 12], "nonaffine_elastic_contribut": [2, 7, 12, 14, 20, 24], "eigenvalu": [2, 12, 14, 20], "eigenvector": [2, 12, 14, 20], "pc_paramet": [2, 12, 14, 20], "cg_paramet": [2, 12, 14, 20], "atol": [2, 12, 14, 20], "05": [2, 5, 12, 14, 20], "callback": [2, 12, 14, 20, 23], "maxit": [2, 12, 14, 20], "affin": [2, 5, 12, 14, 20], "occur": [2, 12, 14, 20], "invers": [2, 12, 14, 20], "hessian": [2, 5, 12, 14, 15, 20], "bypass": [2, 12, 14, 20], "cg": [2, 12, 14, 20], "solver": [2, 12, 14, 20], "can": [2, 4, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25], "easili": [2, 12, 14, 20], "local": [2, 5, 11, 12, 14, 20], "ascend": [2, 4, 12, 14, 20], "diagon": [2, 12, 14, 20, 23, 24], "contribut": [2, 12, 14, 20, 23], "dictonari": [2, 12, 14, 20], "conjug": [2, 12, 14, 20, 24], "converg": [2, 12, 14, 20], "residu": [2, 12, 14, 20, 23], "max": [2, 12, 14, 20, 24], "iter": [2, 12, 14, 20], "stop": [2, 12, 14, 20, 21, 23], "step": [2, 5, 12, 14, 16, 20, 23], "been": [2, 6, 12, 14, 16, 20, 21, 23], "achiev": [2, 12, 14, 20], "spars": [2, 4, 12, 14, 20], "dens": [2, 12, 14, 20], "linearoper": [2, 12, 14, 20], "precondition": [2, 12, 14, 20], "user": [2, 12, 14, 20], "suppli": [2, 12, 14, 20], "incomplet": [2, 12, 14, 20], "lu": [2, 12, 14, 20], "decomposit": [2, 12, 14, 20], "drop_tol": [2, 12, 14, 20], "drop": [2, 12, 14, 20], "fill_factor": [2, 12, 14, 20], "fill": [2, 12, 14, 17, 20, 24], "upper": [2, 12, 14, 20], "bound": [2, 12, 14, 20], "drop_rul": [2, 12, 14, 20], "str": [2, 4, 6, 12, 14, 16, 19, 20, 21, 23], "comma": [2, 12, 14, 20], "separ": [2, 12, 14, 20], "rule": [2, 12, 14, 20], "permc_spec": [2, 12, 14, 20], "how": [2, 8, 9, 12, 14, 20, 23], "permut": [2, 12, 14, 20], "column": [2, 12, 14, 19, 20], "sparsiti": [2, 12, 14, 20], "diag_pivot_thresh": [2, 12, 14, 20], "threshold": [2, 12, 14, 16, 19, 20], "entri": [2, 12, 14, 20, 23], "accept": [2, 4, 12, 14, 18, 20], "pivot": [2, 12, 14, 20], "expert": [2, 12, 14, 20], "custom": [2, 12, 14, 20], "supernod": [2, 12, 14, 20], "panel_s": [2, 12, 14, 20], "panel": [2, 12, 14, 20], "dictionari": [2, 4, 12, 14, 16, 18, 19, 20, 21, 23], "superlu": [2, 12, 14, 20], "neighbourhood": [4, 7, 12, 24], "atom_typ": [4, 12], "abc": [4, 12, 14, 16, 20, 21, 23], "abstract": [4, 12, 20], "pair": [4, 12, 14, 15, 18, 20], "triplet": [4, 12, 15], "get_pair": [4, 7, 12, 24], "request": [4, 11, 12], "get_triplet": [4, 7, 12, 24], "full_connect": [4, 12], "static": [4, 12], "pair_dist": [4, 12], "make_result": [4, 7, 12, 24], "connect": [4, 12, 18, 19], "d": [4, 5, 12, 14, 16, 20, 21, 23], "accepted_quant": [4, 12], "compute_dist": [4, 7, 12, 24], "connected_triplet": [4, 7, 12, 24], "pair_list": [4, 12], "triplet_list": [4, 7, 12, 24], "nb_pair": [4, 12], "triplet_to_numb": [4, 7, 12, 24], "find_triplet_typ": [4, 7, 12, 24], "id": [4, 5, 12], "lexsort": [4, 7, 12, 24], "double_neighbourhood": [4, 7, 12, 24], "reverse_pair_indic": [4, 7, 12, 24], "i_p": [4, 12], "j_p": [4, 12], "r_p": [4, 12], "cutoffneighbourhood": [4, 7, 12, 24], "pair_typ": [4, 7, 12, 24], "triplet_typ": [4, 7, 12, 24], "proxim": [4, 12], "arraylik": [4, 12], "neighbor": [4, 12, 14, 18], "search": [4, 11, 12, 18, 23], "all": [4, 12, 14, 16, 18, 19, 20, 21, 23, 24], "specif": [4, 11, 12, 16, 18], "sphere": [4, 12], "overlap": [4, 12, 19], "within": [4, 12, 14, 19, 23], "neighborhood": [4, 12], "convent": [4, 12], "molecularneighbourhood": [4, 7, 12, 24], "molecul": [4, 7, 12, 16, 19, 24], "double_cutoff": [4, 12], "molecular": [4, 12], "initialz": [4, 12], "double_connect": [4, 7, 12, 24], "sort": [4, 12, 24], "complete_connect": [4, 7, 12, 24], "typeoffset": [4, 12], "add": [4, 12, 16, 19, 23], "mic": [4, 7, 12, 15, 24], "dr": [4, 12], "pbc": [4, 12, 14, 16, 21, 23], "minimum": [4, 12], "simul": [4, 11, 12, 16, 17, 19, 20], "boundari": [4, 12, 20, 23], "wrap": [4, 12], "cell_origin": [4, 12], "nonperiod": [4, 12], "complex": [4, 12, 15], "those": [4, 12, 16], "becom": [4, 12], "ASE": [4, 11, 12, 14, 16, 17, 23], "individu": [4, 12, 19], "algorithm": [4, 5, 12], "charact": [4, 12], "thei": [4, 8, 12, 14, 18, 19, 21, 23], "With": [4, 12], "dot": [4, 12, 24], "shrink": [4, 12], "abov": [4, 12, 15, 16, 19], "guarante": [4, 12], "numpi": [4, 11, 12, 14, 23], "import": [4, 12, 14, 23], "count": [4, 12, 14], "neighbor_list": [4, 12], "coord": [4, 12], "bincount": [4, 12], "speci": [4, 12, 14], "distribut": [4, 12], "00": [4, 12], "bin_edg": [4, 12], "histogram": [4, 12], "bin": [4, 12], "pdf": [4, 12], "pi": [4, 12, 23], "get_volum": [4, 12], "ijdd": [4, 12], "pair_forc": [4, 12], "t": [4, 12, 14, 21, 23, 24], "forces_x": [4, 12], "weight": [4, 12, 14, 20], "minlength": [4, 12], "forces_i": [4, 12], "forces_z": [4, 12], "dynam": [4, 12, 14, 20, 23], "store": [4, 12, 16, 17, 19, 23], "block": [4, 12, 14, 20], "bsr_matrix": [4, 12, 14], "abs_dr": [4, 12], "dynmat": [4, 12], "dde": [4, 12], "reshap": [4, 12, 23, 24], "ey": [4, 12], "dtype": [4, 12, 24], "dynmat_bsr": [4, 12], "first_i": [4, 12], "dynmat_diag": [4, 12], "empti": [4, 12, 14, 17], "arang": [4, 12], "i_n": [4, 12, 14], "j_n": [4, 12, 14], "dr_nc": [4, 12, 14], "abs_dr_n": [4, 12, 14], "e_nc": [4, 12], "d_ncc": [4, 12], "dde_n": [4, 12], "de_n": [4, 12], "nat": [4, 12], "ddiag_icc": [4, 12], "first_neighbour": [4, 12], "abs_dr_p": [4, 12], "tripl": [4, 12], "input": [4, 12, 19, 23], "adress": [4, 12], "occour": [4, 12], "neighour": [4, 12], "ij_t": [4, 12], "ik_t": [4, 12], "jk_t": [4, 12], "jk": [4, 12, 15], "ik": [4, 12, 15], "ijd": [4, 12], "int32": [4, 12], "9": [4, 12, 14], "first_ij": [4, 12], "find_ij": [4, 12], "slower": [4, 12], "less": [4, 12], "get_jump_indici": [4, 12], "find_indices_of_reversed_pair": [4, 7, 12, 24], "where": [4, 12, 14, 16, 19, 23], "identifi": [4, 12], "small": [4, 12, 19], "care": [4, 12, 15], "becaus": [4, 12, 15], "appear": [4, 12], "therefor": [4, 12], "taken": [4, 12, 16], "fact": [4, 12], "howev": [4, 12, 14], "do": [4, 10, 12, 14, 16, 21, 23, 25], "assumpt": [4, 12], "avoid": [4, 12, 23], "overhead": [4, 12], "find_common_neighbour": [4, 7, 12, 24], "common": [4, 12, 19], "i1": [4, 12], "j1": [4, 12], "i2": [4, 12], "share": [4, 12, 17], "itself": [4, 12], "wai": [4, 12], "row": [4, 12, 14], "equal": [4, 12], "total": [4, 12, 14, 16, 17], "cnl_i1_i2": [4, 12], "cnl_j1": [4, 12], "nl_index_i1_j1": [4, 12], "nl_index_i2_j1": [4, 12], "accumul": [4, 12, 23], "random": [4, 12, 14], "facecenteredcub": [4, 12], "cu": [4, 12], "256": [4, 12], "22016": [4, 12], "1893376": [4, 12], "unique_pairs_i1_i2": [4, 12], "bincount_bin": [4, 12], "uniqu": [4, 12], "return_invers": [4, 12], "65536": [4, 12], "tmp": [4, 12], "my_sum": [4, 12], "etc": [5, 12], "numerical_forc": [5, 7], "finit": [5, 12, 14, 16, 20, 21, 23], "minumum": 5, "numerical_stress": [5, 7], "numerical_hessian": [5, 7], "coo_matrix": 5, "jacobian": 5, "central": [5, 14, 20], "numerical_nonaffine_forc": [5, 7, 14, 20], "done": [5, 12, 14, 17, 20], "rescal": [5, 14, 20, 23], "numerical_nonaffine_forces_refer": [5, 7], "nonaffin": 5, "refer": [5, 11, 12, 14, 15, 16, 20, 23], "get_derivative_volum": [5, 7], "respect": [5, 12, 14, 23], "get_derivative_wave_vector": [5, 7], "wave": [5, 23], "has_paramet": [6, 7, 12, 24], "name": [6, 12, 14, 16, 19, 20, 21, 23, 24], "test": [6, 12], "param": [6, 12, 16, 23], "logger": [6, 24], "Will": [6, 12], "present": [6, 12, 14, 23], "root": [7, 11], "numer": [7, 11, 12, 14, 16, 20, 21, 23], "fractur": [7, 11, 23], "mechan": [7, 11, 23], "disloc": [7, 11], "here": [8, 9, 10, 11, 12, 23, 25], "compos": [8, 19], "rve": 9, "what": [10, 12, 14, 21, 23, 25], "you": [10, 12, 25], "scienc": 11, "toolbox": 11, "built": [11, 12], "environ": 11, "plastic": 11, "electro": 11, "chemistri": 11, "tribologi": 11, "domain": [11, 23], "also": [11, 12, 14, 16, 19, 20, 21, 23], "implement": [11, 12, 14, 16, 18, 20, 21, 23], "purpos": [11, 12, 14, 16, 20, 21, 23], "low": [11, 12], "level": [11, 12, 19], "utili": 11, "effici": 11, "ring": [11, 19, 24], "correl": 11, "instal": 11, "window": 11, "linux": 11, "x86": 11, "maco": 11, "python3": 11, "pip": 11, "latest": 11, "directli": [11, 12], "compil": [11, 12], "git": 11, "libatom": [11, 12], "date": [11, 18], "wheel": 11, "found": [11, 12, 20, 23], "sphinx": 11, "project": [11, 12, 14, 16, 20, 21, 23], "sinc": [11, 12, 14, 16, 18, 20, 21, 23], "top": 11, "good": [11, 12], "complement": 11, "issu": 11, "ask": 11, "question": 11, "bug": [11, 12], "report": 11, "improv": 11, "suggest": [11, 12], "welcom": 11, "directori": [11, 12, 14, 16, 20, 21, 23, 24], "cd": 11, "pytest": 11, "packag": [11, 24], "www": 11, "wiki": 11, "fysik": 11, "dtu": 11, "dk": 11, "quippi": [11, 12], "quip": [11, 12], "atomistica": 11, "chemview": 11, "gabrielelanaro": 11, "wa": [11, 12, 18], "deutsch": 11, "forschungsgemeinschaft": 11, "258153560": 11, "engin": [11, 12], "physic": [11, 14, 19, 20], "research": 11, "council": 11, "grant": 11, "ep": [11, 23], "p002188": 11, "r012474": 11, "r043612": 11, "api": [11, 12], "page": 11, "contact_mechan": [12, 24], "dmt": [12, 24], "hertz": [12, 24], "jkr": [12, 24], "greens_funct": [12, 24], "fracture_mechan": [12, 24], "set_group": [12, 23], "set_region": [12, 23], "diamond": [12, 23], "fcc": [12, 23], "sc": [12, 23], "crack": [12, 24], "rectilinearanisotropiccrack": [12, 23], "set_plane_stress": [12, 23], "set_plane_strain": [12, 23], "deformation_gradi": [12, 23], "rtheta": [12, 23], "k1g": [12, 23], "k1gsqg": [12, 23], "displacement_residu": [12, 23], "deformation_gradient_residu": [12, 23], "cubiccrystalcrack": [12, 23], "displacements_from_cylinder_coordin": [12, 23], "displacements_from_cartesian_coordin": [12, 23], "deformation_gradient_from_cylinder_coordin": [12, 23], "deformation_gradient_from_cartesian_coordin": [12, 23], "crack_tip_posit": [12, 23], "crack_tip_position_i": [12, 23], "scale_displac": [12, 23], "stresses_from_cylinder_coordin": [12, 23], "stresses_from_cartesian_coordin": [12, 23], "sinclaircrack": [12, 23], "pack": [12, 23], "unpack": [12, 23], "get_dof": [12, 23], "set_dof": [12, 23], "u_cl": [12, 23], "fit_cl": [12, 23], "update_atom": [12, 23], "set_atom": [12, 23], "get_crack_tip_forc": [12, 23], "get_xdot": [12, 23], "get_k_forc": [12, 23], "get_forc": [12, 14, 16, 20, 21, 23, 24], "update_precon": [12, 23], "get_precon": [12, 23], "get_potential_energi": [12, 14, 16, 20, 21, 23, 24], "rescale_k": [12, 23], "arc_length_continu": [12, 23], "anim": [12, 23], "isotropic_modei_crack_tip_stress_field": [12, 23], "isotropic_modei_crack_tip_displacement_field": [12, 23], "isotropicstressfield": [12, 23], "get_stress": [12, 14, 16, 20, 21, 23, 24], "strain_to_g": [12, 23], "g_to_strain": [12, 23], "get_strain": [12, 23], "get_energy_release_r": [12, 23], "get_stress_intensity_factor": [12, 23], "fit_crack_stress_field": [12, 23], "find_tip_coordin": [12, 23], "find_tip_broken_bond": [12, 23], "find_tip_stress_field": [12, 23], "plot_stress_field": [12, 23], "thin_strip_displacement_i": [12, 23], "print_crack_system": [12, 23], "constantstrainr": [12, 23], "copi": [12, 19, 23, 24], "apply_strain": [12, 23], "crackpathsel": [12, 24], "energy_releas": [12, 24], "j_integr": [12, 23], "idealbrittlesolid": [12, 24], "triangular_lattice_slab": [12, 23], "find_triangles_2d": [12, 23], "implemented_properti": [12, 14, 16, 20, 21, 23, 24], "default_paramet": [12, 14, 16, 20, 21, 23, 24], "set_reference_cryst": [12, 23], "get_wave_spe": [12, 23], "get_elastic_moduli": [12, 23], "get_youngs_modulu": [12, 23], "get_poisson_ratio": [12, 23], "band_structur": [12, 14, 16, 20, 21, 23, 24], "calculate_numerical_forc": [12, 14, 16, 20, 21, 23, 24], "calculate_numerical_stress": [12, 14, 16, 20, 21, 23, 24], "calculate_properti": [12, 14, 16, 20, 21, 23, 24], "calculation_requir": [12, 14, 16, 20, 21, 23, 24], "check_stat": [12, 14, 16, 20, 21, 23, 24], "discard_results_on_any_chang": [12, 14, 16, 20, 21, 23, 24], "export_properti": [12, 14, 16, 20, 21, 23, 24], "get_atom": [12, 14, 16, 20, 21, 23, 24], "get_charg": [12, 14, 16, 20, 21, 23, 24], "get_default_paramet": [12, 14, 16, 20, 21, 23, 24], "get_dipole_mo": [12, 14, 16, 20, 21, 23, 24], "get_magnetic_mo": [12, 14, 16, 20, 21, 23, 24], "get_properti": [12, 14, 16, 20, 21, 23, 24], "ignored_chang": [12, 14, 16, 20, 21, 23, 24], "label": [12, 14, 16, 20, 21, 23, 24], "read_atom": [12, 14, 16, 20, 21, 23, 24], "reset": [12, 14, 16, 20, 21, 23, 24], "set_label": [12, 14, 16, 20, 21, 23, 24], "todict": [12, 14, 16, 20, 21, 23, 24], "find_crack_tip": [12, 23], "set_initial_veloc": [12, 23], "set_constraint": [12, 23], "extend_strip": [12, 23], "nbin": 12, "arg": [12, 15, 16, 20, 23], "consid": [12, 19], "shorter": 12, "2_min": 12, "falk": 12, "langer": 12, "rev": [12, 14, 20], "57": 12, "7192": 12, "1998": 12, "get_xij": [12, 24], "i_now": 12, "dr_now": 12, "dr_old": 12, "x_": 12, "get_yij": [12, 24], "y_": 12, "array_invers": [12, 24], "matric": 12, "faster": 12, "linalg": 12, "get_delta_plus_epsilon_dgesv": [12, 24], "delta_ij": 12, "epsilon_ij": 12, "get_delta_plus_epsilon": [12, 24], "get_d_square_min": [12, 24], "atoms_now": 12, "atoms_old": 12, "j_now": 12, "delta_plus_epsilon": 12, "automat": 12, "bond_length": 12, "exclud": 12, "vacuum": [12, 23], "slab": [12, 23], "turn": 12, "ident": 12, "cartesian": [12, 23], "boolean": [12, 23], "much": 12, "statu": 12, "screen": 12, "hdr_str": [12, 24], "header": [12, 14], "hdrfmt_str": [12, 24], "datatyp": 12, "numfmt_str": [12, 24], "flatten": [12, 24], "_io": 12, "textiowrapp": 12, "stdout": 12, "encod": 12, "utf": 12, "8": [12, 14, 20, 23], "outeveri": 12, "sepeveri": 12, "flush": [12, 24], "set_logfil": [12, 24], "pr": [12, 24], "caller": 12, "warn": [12, 16, 24], "st": [12, 24], "hdr": 12, "val": 12, "force_print": 12, "iteration_finish": [12, 24], "get_logfil": [12, 24], "has_logfil": [12, 24], "set_outeveri": [12, 24], "ring_statist": [12, 24], "maxlength": 12, "shortest": 12, "sampl": 12, "franzblau": 12, "4925": 12, "1991": 12, "ringstat": 12, "pack_atoms_to_reftraj_str": [12, 24], "pack_atoms_to_xyz_str": [12, 24], "unpack_reftraj_str_to_atom": [12, 24], "pack_results_to_reftraj_output_str": [12, 24], "unpack_reftraj_output_str_to_result": [12, 24], "unpack_xyz_str_to_result": [12, 24], "atomsrequesthandl": [12, 24], "client_address": 12, "server": 12, "streamrequesthandl": 12, "handl": [12, 14, 16, 20, 21, 23, 24], "disable_nagle_algorithm": [12, 24], "finish": [12, 24], "rbufsiz": [12, 24], "setup": [12, 24], "timeout": [12, 24], "wbufsiz": [12, 24], "atomsserversync": [12, 24], "server_address": 12, "requesthandlerclass": 12, "client": [12, 24], "bind_and_activ": 12, "max_attempt": 12, "bgq": 12, "tcpserver": 12, "allow_reuse_address": [12, 24], "constructor": [12, 23], "overrid": [12, 23], "request_queue_s": [12, 24], "server_activ": [12, 24], "activ": [12, 19], "overridden": 12, "shutdown_cli": [12, 24], "shutdown": [12, 24], "serve_forev": [12, 24], "loop": 12, "until": 12, "while": [12, 19], "anoth": 12, "thread": 12, "deadlock": 12, "put": [12, 24], "client_id": 12, "force_restart": 12, "join_al": [12, 24], "get_result": [12, 24], "address_famili": [12, 24], "close_request": [12, 24], "clean": 12, "fileno": [12, 24], "socket": 12, "interfac": [12, 16, 18], "selector": 12, "finish_request": [12, 24], "instanti": 12, "get_request": [12, 24], "address": 12, "handle_error": [12, 24], "gracefulli": 12, "traceback": 12, "continu": [12, 23], "handle_request": [12, 24], "possibli": 12, "handle_timeout": [12, 24], "arriv": 12, "forkingmixin": 12, "process_request": [12, 24], "threadingmixin": 12, "poll_interv": 12, "poll": 12, "ignor": [12, 14, 16, 20, 21, 23], "task": 12, "them": [12, 16], "server_bind": [12, 24], "bind": 12, "server_clos": [12, 24], "service_act": [12, 24], "subclass": [12, 14, 16, 20, 21, 23], "mixin": 12, "ani": [12, 14, 16, 18, 19, 20, 21, 23, 24], "dure": [12, 19, 23], "shutdown_request": [12, 24], "socket_typ": [12, 24], "verify_request": [12, 24], "verifi": 12, "proce": 12, "atomsserverasync": [12, 24], "asynchron": 12, "atomsserv": [12, 24], "block_on_clos": [12, 24], "daemon_thread": [12, 24], "process_request_thread": [12, 24], "baseserv": 12, "except": 12, "alia": [12, 14], "ex": 12, "env": 12, "npj": 12, "ppn": 12, "corner": 12, "jobnam": 12, "rundir": 12, "fmt": 12, "reftraj": 12, "parmod": 12, "mpirun": 12, "mpirun_arg": 12, "max_pos_diff": 12, "max_cell_diff": 12, "job": 12, "restart": [12, 14, 16, 20, 21, 23], "node": 12, "extra_arg": [12, 24], "command": 12, "runtimeerror": [12, 18], "complet": 12, "wait": 12, "waits_thread": 12, "isal": 12, "wait_for_shutdown": [12, 24], "typic": [12, 14, 16, 20, 21, 23], "start_or_restart": [12, 24], "previous": [12, 14], "queu": 12, "client_timeout": 12, "grace": 12, "still": 12, "aliv": 12, "sigterm": 12, "signal": 12, "sent": 12, "had": 12, "further": [12, 18], "sigkil": 12, "mark": [12, 16, 23], "input_q": 12, "previou": [12, 23], "write_input_fil": [12, 24], "preprocess": [12, 24], "prepar": 12, "schedul": 12, "compat": [12, 23], "last": [12, 14, 16, 18, 19, 20, 21, 23], "submit": 12, "queue": 12, "is_compat": [12, 24], "mani": [12, 19], "chang": [12, 14, 16, 19, 20, 21, 23], "rather": 12, "updat": [12, 14, 16, 18, 19, 21, 23], "inplac": 12, "first_tim": 12, "postprocess": [12, 24], "post": 12, "overrriden": 12, "old_at": 12, "new_at": 12, "quipclient": [12, 24], "param_fil": 12, "written": 12, "subsequ": [12, 23], "commun": 12, "via": 12, "qmclient": [12, 24], "vaspclient": [12, 24], "vasp_arg": 12, "vasp": 12, "poscar": 12, "incar": 12, "potcar": 12, "kpoint": 12, "communicatin": 12, "castepcli": [12, 24], "castep_arg": 12, "castep": 12, "socketcalcul": [12, 24], "ip": 12, "port": 12, "remot": 12, "synchron": 12, "basic": [12, 14, 21, 23], "prefix": [12, 14, 16, 20, 21, 23], "don": [12, 14, 21, 23], "ignore_bad_restart_fil": [12, 14, 21, 23], "deprec": [12, 14, 20, 21, 23], "pleas": [12, 14, 21, 23], "futur": [12, 14, 21, 23], "broken": [12, 14, 21, 23], "By": [12, 14, 21, 23], "purepath": [12, 14, 21, 23], "Not": [12, 14, 21, 23], "support": [12, 14, 16, 21, 23], "instead": [12, 14, 15, 20, 21, 23], "system_chang": [12, 14, 16, 20, 21, 23], "combin": [12, 14, 16, 21, 23], "charg": [12, 14, 21, 23], "magmom": [12, 14, 21, 23], "six": [12, 14, 21, 23], "initial_charg": [12, 14, 21, 23], "initial_magmom": [12, 14, 21, 23], "want": [12, 14, 21, 23], "insert": [12, 14, 21, 23], "shown": [12, 14, 21, 23], "dummi": [12, 14, 21, 23], "attribut": [12, 14, 16, 20, 21, 23], "band": [12, 14, 16, 20, 21, 23], "experiment": [12, 14, 16, 20, 21, 23], "whether": [12, 14, 16, 20, 21, 23], "purg": [12, 14, 16, 20, 21, 23], "magnet": [12, 14, 16, 20, 21, 23], "moment": [12, 14, 16, 20, 21, 23], "onto": [12, 14, 16, 20, 21, 23], "force_consist": [12, 14, 16, 20, 21, 23], "allow_calcul": [12, 14, 16, 20, 21, 23], "intens": [12, 14, 16, 20, 21, 23], "readerror": [12, 14, 16, 20, 21, 23], "corrupt": [12, 14, 16, 20, 21, 23], "messag": [12, 14, 16, 19, 20, 21, 23], "succ": [12, 14, 16, 20, 21, 23], "fileiocalcul": [12, 14, 16, 20, 21, 23], "read_result": [12, 14, 16, 20, 21, 23], "classmethod": [12, 14, 16, 20, 21, 23], "clear": [12, 14, 16, 20, 21, 23], "old": [12, 14, 16, 19, 20, 21, 23], "key1": [12, 14, 16, 20, 21, 23], "value1": [12, 14, 16, 20, 21, 23], "key2": [12, 14, 16, 20, 21, 23], "value2": [12, 14, 16, 20, 21, 23], "look": [12, 14, 16, 20, 21, 23], "chaneg": [12, 14, 16, 20, 21, 23], "decid": [12, 14, 16, 20, 21, 23], "harmless": [12, 14, 16, 20, 21, 23], "special": [12, 14, 16, 19, 20, 21, 23], "dir1": [12, 14, 16, 20, 21, 23], "skip_default": [12, 14, 16, 20, 21, 23], "gcd": [12, 24], "greatest": 12, "divisor": 12, "millerindex": [12, 24], "four": 12, "pars": [12, 14, 24], "211": 12, "111": 12, "round": [12, 24], "bracket": [12, 24], "denot": 12, "latex": [12, 24], "assert": 12, "angle_between": [12, 24], "direction_famili": 12, "plane_famili": 12, "all_bracket": [12, 24], "neg": 12, "lead": 12, "minu": [12, 23], "trail": 12, "112b": 12, "render": 12, "variou": 12, "simplifi": [12, 24], "divid": [12, 14, 23], "through": 12, "denomin": 12, "normalis": [12, 24], "hat": [12, 24], "cosin": [12, 24], "as4": [12, 24], "as3": [12, 24], "plane_spac": [12, 24], "view": [12, 24], "transpos": [12, 24], "keepdim": 12, "document": 12, "argmax": [12, 24], "argmin": [12, 24], "argpartit": [12, 24], "kth": 12, "introselect": 12, "would": 12, "partit": [12, 24], "argsort": [12, 24], "astyp": [12, 24], "cast": 12, "unsaf": 12, "subok": 12, "typecod": 12, "memori": 12, "layout": 12, "mean": [12, 14, 19, 23, 24], "fortran": 12, "contigu": 12, "equiv": [12, 14], "safe": 12, "same_kind": 12, "backward": 12, "byte": 12, "float64": [12, 23], "float32": 12, "convers": 12, "sub": [12, 19], "alwai": 12, "newli": 12, "alloc": 12, "satisfi": 12, "arr_t": 12, "unless": 12, "17": 12, "enough": 12, "complexwarn": 12, "real": [12, 23, 24], "some": [12, 16, 18, 23], "own": 12, "whose": [12, 23], "byteswap": [12, 24], "swap": 12, "toggl": 12, "endian": 12, "big": 12, "imaginari": 12, "8755": 12, "int16": 12, "hex": 12, "0x1": 12, "0x100": 12, "0x2233": 12, "13090": 12, "0x3322": 12, "ceg": 12, "fac": 12, "s3": 12, "newbyteord": [12, 24], "uint8": 12, "choos": [12, 24], "choic": [12, 20], "clip": [12, 24], "min": [12, 24], "limit": [12, 16, 19], "One": [12, 23], "compress": [12, 24], "select": [12, 16, 19], "conj": [12, 24], "wise": 12, "match": [12, 23], "veri": 12, "similar": 12, "behavior": 12, "copyto": 12, "prefer": 12, "c_contigu": [12, 24], "ctype": [12, 24], "interact": [12, 14, 15, 20], "easier": 12, "among": 12, "stride": [12, 24], "below": [12, 18], "themselv": 12, "possess": 12, "python": 12, "ctypeslib": 12, "public": 12, "were": [12, 19], "guid": 12, "omit": 12, "undocu": 12, "well": [12, 14], "privat": 12, "_ctype": 12, "pointer": 12, "area": 12, "writeabl": [12, 24], "troubl": 12, "crash": 12, "bewar": 12, "exactli": 12, "_array_interface_": 12, "unlik": 12, "data_a": 12, "kept": 12, "c_void_p": 12, "dealloc": 12, "spelt": 12, "ndim": [12, 24], "basetyp": 12, "p": [12, 15, 23], "platform": 12, "c_intp": 12, "could": 12, "c_int": 12, "c_long": 12, "c_longlong": 12, "depend": [12, 16], "underli": 12, "jump": 12, "obj": 12, "_as_parameter_": 12, "perhap": 12, "c_doubl": 12, "keep": 12, "shape_a": 12, "c_short": 12, "strides_a": 12, "someth": 12, "as_paramet": 12, "31962608": 12, "vari": [12, 23], "c_uint32": 12, "__main__": 12, "lp_c_uint": 12, "0x7ff2fc1fc200": 12, "c_uint": 12, "c_uint64": 12, "c_ulong": 12, "4294967296": 12, "_intern": 12, "c_long_array_2": 12, "0x7ff2fc1fce60": 12, "0x7ff2fc1ff320": 12, "cumprod": [12, 24], "cumul": 12, "product": 12, "cumsum": [12, 24], "buffer": [12, 16, 19], "offset": 12, "axis1": 12, "axis2": 12, "restrict": [12, 20, 23], "remov": [12, 15], "arr": 12, "discourag": 12, "without": [12, 16], "modifi": [12, 16], "dump": [12, 23, 24], "pickl": 12, "back": 12, "pathlib": 12, "now": [12, 19], "scalar": [12, 15], "assign": [12, 16], "expect": 12, "behav": [12, 24], "rare": 12, "distinct": 12, "being": [12, 17], "style": [12, 14, 23], "segment": 12, "f_contigu": [12, 24], "owndata": [12, 24], "borrow": 12, "lock": 12, "inherit": 12, "remain": [12, 15], "opposit": 12, "made": 12, "circumst": 12, "alter": 12, "attempt": 12, "appropri": 12, "hardwar": 12, "writebackifcopi": [12, 24], "pyarray_resolvewritebackifcopi": 12, "fnc": [12, 24], "carrai": [12, 24], "ca": 12, "farrai": [12, 24], "fa": [12, 14], "lowercas": 12, "short": 12, "setflag": [12, 24], "cannot": 12, "arbitrarili": 12, "truli": 12, "ultim": 12, "owner": 12, "expos": 12, "simultan": 12, "dimension": [12, 20], "higher": 12, "dimens": [12, 14, 20], "dim": 12, "hold": [12, 16, 19], "items": [12, 24], "flat": [12, 24], "over": [12, 16, 23], "flatit": 12, "act": [12, 14], "similarli": 12, "collaps": 12, "major": 12, "ravel": [12, 24], "getfield": [12, 24], "certain": 12, "complex128": 12, "32": 12, "bit": 12, "larger": [12, 19], "skip": 12, "begin": [12, 23], "diag": 12, "0j": 12, "1j": 12, "70710678": 12, "item": [12, 24], "variabl": [12, 16], "int_typ": 12, "interpret": 12, "nd": 12, "suitabl": [12, 23], "longdoubl": 12, "clongdoubl": 12, "lose": 12, "void": 12, "arithmet": [12, 14], "math": 12, "seed": 12, "123": 12, "randint": 12, "itemset": [12, 24], "There": [12, 14], "Then": [12, 23], "locat": [12, 23], "syntax": 12, "complic": 12, "sure": [12, 18], "amax": 12, "amin": 12, "nbyte": [12, 24], "consum": 12, "sy": 12, "getsizeof": 12, "parent": 12, "480": 12, "prod": [12, 24], "new_ord": 12, "newbytord": 12, "littl": 12, "nativ": 12, "byteord": 12, "new_arr": 12, "reflect": 12, "nonzero": [12, 14, 24], "rearrang": 12, "smaller": 12, "greater": 12, "behind": [12, 23], "undefin": 12, "onc": [12, 15, 18, 19], "22": 12, "unspecifi": 12, "come": 12, "break": [12, 18], "ti": 12, "indirect": 12, "ptp": [12, 24], "peak": 12, "free": 12, "resiz": [12, 24], "new_shap": 12, "refcheck": 12, "pypi": 12, "reliabl": 12, "systemerror": 12, "behaviour": 12, "realloc": 12, "space": [12, 14], "consecut": 12, "enlarg": 12, "doesn": 12, "referenc": 12, "prevent": 12, "most": 12, "recent": 12, "decim": 12, "searchsort": [12, 24], "side": 12, "sorter": 12, "maintain": 12, "setfield": [12, 24], "0e": 12, "000": 12, "5e": 12, "323": 12, "uic": 12, "These": [12, 14, 20, 23], "affect": 12, "actual": [12, 23], "never": 12, "unpickl": 12, "describ": [12, 23], "properli": 12, "letter": 12, "stdin": 12, "usual": 12, "As": 12, "infer": 12, "fail": 12, "unchang": 12, "attributeerror": [12, 16], "incompat": 12, "modif": 12, "getter": 12, "precis": 12, "int_": 12, "relev": [12, 23], "overflow": 12, "30": 12, "quicksort": 12, "mergesort": 12, "heapsort": 12, "timsort": 12, "cover": [12, 14], "retain": 12, "kei": [12, 19, 23], "s1": 12, "i8": 12, "squeez": [12, 24], "std": [12, 24], "ddof": 12, "deviat": 12, "travers": 12, "explan": 12, "rst": 12, "lib": 12, "stride_trick": 12, "as_strid": 12, "safer": 12, "imagin": 12, "known": 12, "tell": 12, "13": 12, "18": 12, "19": 12, "21": [12, 23], "23": 12, "48": [12, 20], "224": 12, "1344": 12, "813": 12, "swapax": [12, 24], "interchang": 12, "tobyt": [12, 24], "raw": 12, "exhibit": 12, "frombuff": 12, "oper": [12, 19], "u2": 12, "x00": 12, "x01": 12, "x02": 12, "x03": 12, "tofil": [12, 24], "fid": 12, "sep": 12, "text": [12, 14], "binari": 12, "independ": [12, 16], "recov": 12, "fromfil": 12, "open": 12, "closest": 12, "conveni": 12, "quick": 12, "storag": [12, 14], "lost": 12, "intend": 12, "archiv": 12, "transport": 12, "machin": 12, "overcom": 12, "expens": [12, 18], "gzipfil": 12, "bytesio": 12, "tolist": [12, 24], "deep": 12, "nest": 12, "nearest": [12, 23], "builtin": 12, "depth": [12, 23], "recreat": 12, "although": 12, "sometim": 12, "1d": 12, "almost": 12, "uint32": 12, "a_list": 12, "a_tolist": 12, "addition": [12, 23], "2d": [12, 23], "recurs": 12, "0d": 12, "typeerror": 12, "tostr": [12, 24], "despit": 12, "trace": [12, 24], "th": [12, 19], "simpli": [12, 14], "altern": 12, "give": [12, 15], "var": [12, 24], "varianc": 12, "former": 12, "invok": [12, 23], "float_": 12, "descriptor": 12, "again": 12, "omiss": 12, "some_dtyp": 12, "caus": 12, "reinterpret": 12, "ndarray_subclass": 12, "just": [12, 14], "regular": 12, "entir": 12, "int8": 12, "513": 12, "xv": 12, "recarrai": 12, "width": 12, "fine": [12, 14], "rest": [12, 16, 19], "770": 12, "3340": 12, "3854": 12, "1284": 12, "1798": 12, "4368": 12, "4882": 12, "2312": 12, "2826": 12, "5396": 12, "5910": 12, "millerplan": [12, 24], "millerdirect": [12, 24], "crystallograph": [12, 23], "ijk": 12, "lmn": 12, "radian": 12, "make_unit_slab": [12, 24], "translat": 12, "unit_slab": 12, "blob": 12, "src": 12, "f95": 12, "primit": 12, "embed": 14, "fn": 14, "atomic_numb": 14, "rep": 14, "alloi": [14, 20], "matscipycalcul": [14, 20], "free_energi": [14, 20, 23], "energy_virial_and_forc": 14, "atomic_numbers_i": 14, "virial": [14, 23], "abd_dr_n": 14, "epot": [14, 23], "virial_v": 14, "forces_": 14, "calculate_hessian_matrix": 14, "divide_by_mass": [14, 20], "mathcal": 14, "_": [14, 15], "mathrm": 14, "r_": [14, 15], "mu": [14, 23], "spatial": 14, "emb": 14, "phi_": 14, "delta_": [14, 15], "sum_": 14, "neq": 14, "eight": 14, "t_1": 14, "t_2": 14, "t_3": 14, "t_4": 14, "t_5": 14, "t_6": 14, "t_7": 14, "t_8": 14, "g_": 14, "substack": 14, "m_": 14, "rho_": 14, "electron": 14, "densiti": 14, "rho_nu": 14, "mass": [14, 16, 20], "get_hessian": [14, 20], "symmetr": [14, 20], "hermitian": [14, 20], "mix": [14, 20], "m_i": 14, "m_j": 14, "hessian_ncc": 14, "distances_nc": 14, "get_birch_coeffici": [14, 20], "birch": [14, 20], "get_born_elastic_const": [14, 20], "born": [14, 20], "get_dynamical_matrix": [14, 20], "temperatur": [14, 20], "get_non_affine_contribution_to_elastic_const": [14, 20], "get_nonaffine_forc": [14, 20], "get_numerical_non_affine_forc": [14, 20], "get_stress_contribution_to_elastic_const": [14, 20], "due": [14, 20], "cauchi": [14, 20], "tabul": 14, "eamparamet": 14, "atomic_mass": 14, "lattice_const": 14, "crystal_structur": 14, "number_of_density_grid_point": 14, "number_of_distance_grid_point": 14, "density_grid_spac": 14, "distance_grid_spac": 14, "pure": 14, "metal": 14, "grid": [14, 23], "occurr": 14, "9223372036854775807": 14, "read_eam": 14, "eam_fil": 14, "differnt": 14, "flavor": 14, "subset": [14, 23], "lammp": 14, "sandia": 14, "gov": 14, "doc": 14, "pair_eam": 14, "html": 14, "dynamo": 14, "funcfl": 14, "setfl": 14, "sourc": 14, "comment": 14, "nb": 14, "mix_eam": 14, "rep_ab": 14, "beta": [14, 23], "interspeci": 14, "geometr": 14, "merg": 14, "kinf": 14, "ponder": 14, "fb": 14, "rep_a": 14, "rep_b": 14, "karg": 14, "tune": 14, "alpha_a": 14, "alpha_b": 14, "f_ab": 14, "beta_00": 14, "beta_01": 14, "f_ba": 14, "beta_10": 14, "beta_11": 14, "parameters_mix": 14, "f_": 14, "rep_": 14, "zhou": 14, "johnson": 14, "wadlei": 14, "69": 14, "144113": 14, "2004": [14, 23], "write_eam": 14, "out_fil": 14, "average_potenti": 14, "concentr": 14, "avg_atom": 14, "999": 14, "unknown": 14, "ref": [14, 23], "fictiou": 14, "reproduc": 14, "aa": 14, "n_t": 14, "xy": [14, 23], "quad": 14, "g_a": 14, "c_x": 14, "g_x": 14, "m_a": 14, "m_x": 14, "straightforward": 14, "new_f": 14, "new_rep": 14, "zrcu": 14, "onecolumn": 14, "new_paramet": 14, "composit": 14, "join": [14, 19], "zip": [14, 23], "rstrip": 14, "tabl": 14, "equicomposit": 14, "varvenn": 14, "luqu": 14, "n\u00f6hring": 14, "curtin": 14, "interatom": [14, 23], "review": 14, "93": 14, "104201": 14, "2016": 14, "harmon": 15, "zeropair": 15, "__call__": 15, "xi": 15, "__abstractmethods__": 15, "frozenset": 15, "__annotations__": 15, "__dict__": 15, "mappingproxi": 15, "__module__": 15, "__doc__": 15, "_abc_impl": 15, "_abc": 15, "_abc_data": 15, "__slots__": 15, "__weakref__": 15, "weak": 15, "zerotriplet": 15, "harmonicbond": 15, "r0": [15, 20, 23], "atyp": 15, "ptype": 15, "spring": [15, 20], "r_0": 15, "harmonicangl": 15, "redefin": 15, "r_ij_c": 15, "r_ik_c": 15, "a_0": 15, "vec": 15, "2uw": 15, "cdot": 15, "uw": 15, "arcco": 15, "u_i": [15, 23], "v_i": 15, "express": 15, "_i": 15, "w_i": 15, "reader": 15, "u_j": 15, "v_j": 15, "treatment": [15, 16], "_j": 15, "multiclusterforcemixingpotenti": 16, "classical_calcul": 16, "qm_calcul": 16, "forced_qm_list": 16, "change_bond": 16, "calculate_error": 16, "calculation_always_requir": 16, "buffer_hop": [16, 19], "enable_check_st": 16, "facilit": 16, "util": 16, "instac": 16, "forcemixingpotenti": 16, "potential_energi": [16, 19], "all_chang": 16, "power": [16, 23], "mm_pot": 16, "ae": 16, "classic": 16, "carv": [16, 19], "enforc": 16, "topologi": 16, "hop": [16, 19], "noth": 16, "enabl": 16, "meth": 16, "afterward": 16, "emploi": 16, "analyz": 16, "send": 16, "accur": 16, "pot": 16, "ot": [16, 17, 19], "produce_classical_result": 16, "produce_qm_clust": 16, "evaluate_qm_cluster_seri": 16, "clusternumb": 16, "qm_atom": 16, "combine_qm_mm_forc": 16, "cluster_data_list": 16, "clusterdata": [16, 17], "attach_hybrid_data": 16, "full_qm_atoms_mask": 16, "treat": 16, "quantm": 16, "mmechan": 16, "comprehens": 16, "ooutput": 16, "evaluate_error": 16, "heavy_onli": 16, "r_forc": 16, "hybrid": 16, "set_qm_atom": 16, "qm_list": 16, "certian": 16, "throughout": 16, "compute_stress": 16, "viral": 16, "theorem": 16, "sij": 16, "sum_k": 16, "m_k": 16, "v_ik": 16, "v_jk": 16, "r_ik": 16, "f_jk": 16, "veloc": 16, "tensof": 16, "rtype": 16, "print_messag": [16, 19], "mesag": [16, 19], "natom": [16, 17, 19], "termin": [16, 19], "inner": [16, 19], "qmcluster": [16, 19], "special_atoms_list": [16, 19], "manag": [16, 19], "flagginig": 16, "clustering_modul": 16, "qmclustermodul": 16, "qmclusteringtool": [16, 19], "flagging_modul": 16, "qmflaggingtool": [16, 19], "neighbour_list_mcfm": 16, "neighborlistbas": 16, "group": [16, 19], "attach_neighbour_list": 16, "attach_flagging_modul": 16, "attach_clustering_modul": 16, "reset_energized_list": 16, "old_energized_atom": 16, "flaggingmodul": 16, "warmup": 16, "update_qm_region": [16, 19], "carve_clust": [16, 19], "core_qm_list": [16, 19], "get_cluster_data": 17, "mcfm_pot": 17, "parallel": [17, 23], "multiclusterforcemix": 17, "worker_populate_cluster_data": 17, "rank": 17, "nprocloc": 17, "atomic_clust": [17, 19], "clusterindex": 17, "qmcalcul": 17, "sharedlist": 17, "debug_qm_calcul": 17, "calcuat": 17, "tb": 17, "cpu": 17, "stuctur": 17, "mp": 17, "debug": 17, "neighbourlistbas": 18, "clled": 18, "sucesful": 18, "get_neighbour": 18, "neighbourlistmcfm": 18, "skin": 18, "hysteretic_break_factor": 18, "wrapper": 18, "aroud": 18, "reus": 18, "rebuild": 18, "extra": [18, 19], "apart": 18, "do_upd": 18, "pairwis": 18, "radii": 18, "baseqmclustertool": 19, "mediat": 19, "find_neighbour": 19, "heavy_neighbour": 19, "hydrogen_neighbour": 19, "hydrogenate_clust": 19, "neigobur": 19, "heavi": 19, "ion": 19, "struct": 19, "dangl": 19, "double_bonded_atoms_list": 19, "doubli": 19, "create_buffer_region": 19, "qm_atoms_list": 19, "whole": 19, "expand": 19, "buffer_list": 19, "terminal_atom": 19, "verg": 19, "cutoff_atoms_list": 19, "hydrogenate_dangling_bond": 19, "terminal_atoms_list": 19, "replace_single_bond": 19, "terminal_atom_index": 19, "cutoff_atom_index": 19, "atomic_posit": 19, "replace_double_bond": 19, "include_special_atom": 19, "specialatomindex": 19, "regio": 19, "complete_aromatic_r": 19, "total_supplementary_terminal_atom": 19, "deal": 19, "aromat": 19, "aromnat": 19, "create_cluster_from_mark": 19, "select_list": 19, "qm_flag_potential_energi": 19, "small_cluster_hop": 19, "only_heavi": 19, "ema_paramet": 19, "energy_cap": 19, "energy_increas": 19, "threshhold": 19, "indivu": 19, "diension": 19, "enter": 19, "stai": 19, "later": 19, "expans": 19, "lambda": [19, 23], "exponenti": 19, "cap": 19, "multipli": 19, "scale": 19, "convininec": 19, "get_energized_list": 19, "data_arrai": 19, "property_str": 19, "hysteretic_toler": 19, "create_cluster_around_atom": 19, "atom_id": 19, "join_clust": 19, "expand_clust": 19, "exponential_moving_averag": 19, "oldset": 19, "newset": 19, "update_avg_property_per_atom": 19, "avarag": 19, "cutoffinteract": 20, "get_cutoff": 20, "first_deriv": 20, "qi": 20, "qj": 20, "second_deriv": 20, "lennardjonescut": 20, "epsilon": [20, 23], "sigma": [20, 23], "lennard": 20, "jone": 20, "lennardjonesquadrat": 20, "lennardjoneslinear": 20, "feneljcut": 20, "nonlinear": 20, "fene": 20, "bead": 20, "polym": 20, "lj": 20, "rc": [20, 23], "ensur": 20, "contin": 20, "lennardjones84": 20, "c1": 20, "c2": 20, "c3": 20, "c4": 20, "cuzr": 20, "kobayashi": 20, "shinji": 20, "et": 20, "al": 20, "cu57zr43": 20, "amorph": 20, "journal": 20, "societi": 20, "japan": 20, "1980": 20, "1147": 20, "1152": 20, "beestkramersanten": 20, "beest": 20, "kramer": 20, "van": 20, "santen": 20, "bk": 20, "buckingham": 20, "lett": 20, "64": 20, "1990": 20, "pairpotenti": 20, "dynamical_matrix": 20, "nonaffine_forc": 20, "birch_coeffici": 20, "stress_elastic_contribut": 20, "born_const": 20, "elastic_const": 20, "pastewka": 20, "seamless": 20, "atomist": [20, 23], "86": 20, "075459": 20, "2012": 20, "supercel": 21, "supercellcalcul": 21, "eam": 21, "skin_x": 23, "skin_i": 23, "central_x": 23, "central_i": 23, "invert_centr": 23, "cryst": 23, "r_i": 23, "r_iii": 23, "el": 23, "crack_surfac": 23, "crack_front": 23, "Near": 23, "rectilinear": 23, "medium": 23, "sih": 23, "pari": 23, "irwin": 23, "mech": 23, "189": 23, "1965": 23, "a11": 23, "a22": 23, "a12": 23, "a16": 23, "a26": 23, "a66": 23, "b11": 23, "b22": 23, "b33": 23, "b12": 23, "b13": 23, "b23": 23, "b16": 23, "b26": 23, "b36": 23, "b66": 23, "theta": 23, "tip": 23, "cyclind": 23, "du_dx": 23, "du_di": 23, "perpendicular": 23, "dv_dx": 23, "dv_dy": 23, "sig_x": 23, "sig_i": 23, "sig_xi": 23, "invert": 23, "surface_energi": 23, "griffith": 23, "critic": 23, "ref_x": 23, "ref_i": 23, "ideal": 23, "cur": 23, "stress_stat": 23, "crot": 23, "cylindr": 23, "dx": 23, "dy": 23, "ux": 23, "ui": 23, "residual_func": 23, "return_residu": 23, "rel": 23, "leastsq": 23, "end": 23, "old_k": 23, "new_k": 23, "extrapol": 23, "xx": 23, "yy": 23, "crk": 23, "variable_alpha": 23, "variable_k": 23, "alpha_scal": 23, "k_scale": 23, "extended_far_field": 23, "flexibl": 23, "sinclair": 23, "influenc": 23, "law": 23, "propag": 23, "brittl": 23, "philo": 23, "mag": 23, "31": 23, "647": 23, "671": 23, "1975": 23, "undeform": 23, "amount": 23, "bc": 23, "arc": 23, "contrib": 23, "iii": 23, "cle": 23, "NOT": 23, "pre": 23, "r_fit": 23, "x1": 23, "x2": 23, "xdot1": 23, "ftol": 23, "precon": 23, "krylov": 23, "check_grad": 23, "dump_interv": 23, "traj_fil": 23, "x_traj": 23, "h5": 23, "traj_interv": 23, "1234": 23, "atoms_arg": 23, "bonds_arg": 23, "tip_arg": 23, "xy_onli": 23, "singular": 23, "radial": 23, "multidimension": 23, "horzont": 23, "ahead": 23, "anticlockwis": 23, "yx": 23, "zz": 23, "xyz_onli": 23, "horizont": 23, "sxx0": 23, "syy0": 23, "sxy0": 23, "site": 23, "orig_height": 23, "releas": 23, "rate": 23, "thin": 23, "strip": 23, "current_height": 23, "sigma_yi": 23, "eps_yi": 23, "poission": 23, "eps_xx": 23, "unstrain": 23, "height": 23, "origheight": 23, "info": 23, "k_i": 23, "youngsmodulu": 23, "poissionratio_yz": 23, "r_rang": 23, "50": 23, "initial_param": 23, "fix_param": 23, "avg_sigma": 23, "avg_decai": 23, "005": 23, "isotrop": 23, "far": 23, "possionratio_yx": 23, "crackpo": 23, "sigma0": 23, "poissonratio_yx": 23, "On": 23, "exit": 23, "annular": 23, "centr": 23, "carri": 23, "explicitli": 23, "trajectori": 23, "attenu": 23, "dt": 23, "tau": 23, "md": 23, "characterist": 23, "get_calcul": 23, "resolv": 23, "atomresolvedstressfield": 23, "bondlength": 23, "bulk_nn": 23, "boundary_thick": 23, "boundary_buff": 23, "tip_posit": 23, "midpoint": 23, "continuum": 23, "firstli": 23, "sigma_": 23, "vertic": 23, "ramp": 23, "rigidli": 23, "down": 23, "artifici": 23, "red": 23, "green": 23, "blue": 23, "linspac": 23, "meshgrid": 23, "enumer": 23, "scatter": 23, "axhlin": 23, "linewidth": 23, "linestyl": 23, "dash": 23, "axvlin": 23, "pretti": 23, "crack_direct": 23, "cleavage_plan": 23, "delta_strain": 23, "epsilon_yi": 23, "newpo": 23, "rigid_constraint": 23, "applic": 23, "transition_width": 23, "df": 23, "elseif": 23, "co": 23, "sin": 23, "dcoordin": 23, "neighb_j": 23, "neighb_rij": 23, "r_ij": 23, "printf": 23, "f_ij": 23, "sum_b_ij": 23, "b_ij": 23, "eb_i": 23, "local_e_p": 23, "n_p": 23, "2dx": 23, "em": 23, "local_e_m": 23, "n_m": 23, "e0": 23, "tip_x": 23, "tip_i": 23, "r1": 23, "r2": 23, "integr": 23, "contour": 23, "li": 23, "shih": 23, "needleman": 23, "eng": 23, "fract": 23, "405": 23, "1985": 23, "jin": 23, "yuan": 23, "nanosci": 23, "nanotech": 23, "2099": 23, "q": 23, "cohes": 23, "minangl": 23, "5235987755982988": 23, "maxangl": 23, "0943951023931953": 23, "xdim": 23, "ydim": 23, "triangl": 23, "triangular": 23, "sit": 23, "solid": 23, "marder": 23, "130": 23, "517": 23, "555": 23, "longitudin": 23, "rayleigh": 23, "lam": 23, "rightmost": 23, "initialis": 23, "kick": 23, "subpackag": 24, "submodul": 24, "content": 24, "angle_distribut": 24, "atomic_strain": 24, "io": 24, "socketcalc": 24, "structure_identif": 24}, "objects": {"": [[12, 0, 0, "-", "matscipy"]], "matscipy": [[12, 0, 0, "-", "angle_distribution"], [12, 0, 0, "-", "atomic_strain"], [13, 0, 0, "-", "calculators"], [1, 0, 0, "-", "dislocation"], [12, 0, 0, "-", "elasticity"], [23, 0, 0, "-", "fracture_mechanics"], [12, 1, 1, "", "has_parameter"], [12, 0, 0, "-", "hydrogenate"], [12, 0, 0, "-", "io"], [12, 0, 0, "-", "logger"], [12, 0, 0, "-", "neighbours"], [5, 0, 0, "-", "numerical"], [12, 1, 1, "", "parameter"], [12, 0, 0, "-", "rings"], [12, 0, 0, "-", "socketcalc"], [12, 0, 0, "-", "surface"]], "matscipy.angle_distribution": [[12, 1, 1, "", "angle_distribution"]], "matscipy.atomic_strain": [[12, 1, 1, "", "array_inverse"], [12, 1, 1, "", "atomic_strain"], [12, 1, 1, "", "get_D_square_min"], [12, 1, 1, "", "get_XIJ"], [12, 1, 1, "", "get_YIJ"], [12, 1, 1, "", "get_delta_plus_epsilon"], [12, 1, 1, "", "get_delta_plus_epsilon_dgesv"]], "matscipy.calculators": [[14, 0, 0, "-", "eam"], [15, 0, 0, "-", "manybody"], [16, 0, 0, "-", "mcfm"], [20, 0, 0, "-", "pair_potential"], [21, 0, 0, "-", "supercell_calculator"]], "matscipy.calculators.eam": [[14, 0, 0, "-", "average_atom"], [14, 0, 0, "-", "calculator"], [14, 0, 0, "-", "io"]], "matscipy.calculators.eam.average_atom": [[14, 1, 1, "", "average_potential"]], "matscipy.calculators.eam.calculator": [[14, 2, 1, "", "EAM"]], "matscipy.calculators.eam.calculator.EAM": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "band_structure"], [14, 3, 1, "", "calculate"], [14, 3, 1, "", "calculate_hessian_matrix"], [14, 3, 1, "", "calculate_numerical_forces"], [14, 3, 1, "", "calculate_numerical_stress"], [14, 3, 1, "", "calculate_properties"], [14, 3, 1, "", "calculation_required"], [14, 3, 1, "", "check_state"], [14, 4, 1, "", "cutoff"], [14, 5, 1, "", "default_parameters"], [14, 4, 1, "", "directory"], [14, 5, 1, "", "discard_results_on_any_change"], [14, 3, 1, "", "energy_virial_and_forces"], [14, 3, 1, "", "export_properties"], [14, 3, 1, "", "get_atoms"], [14, 3, 1, "", "get_birch_coefficients"], [14, 3, 1, "", "get_born_elastic_constants"], [14, 3, 1, "", "get_charges"], [14, 3, 1, "", "get_default_parameters"], [14, 3, 1, "", "get_dipole_moment"], [14, 3, 1, "", "get_dynamical_matrix"], [14, 3, 1, "", "get_elastic_constants"], [14, 3, 1, "", "get_forces"], [14, 3, 1, "", "get_hessian"], [14, 3, 1, "", "get_magnetic_moment"], [14, 3, 1, "", "get_magnetic_moments"], [14, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [14, 3, 1, "", "get_nonaffine_forces"], [14, 3, 1, "", "get_numerical_non_affine_forces"], [14, 3, 1, "", "get_potential_energies"], [14, 3, 1, "", "get_potential_energy"], [14, 3, 1, "", "get_property"], [14, 3, 1, "", "get_stress"], [14, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [14, 3, 1, "", "get_stresses"], [14, 5, 1, "", "ignored_changes"], [14, 5, 1, "", "implemented_properties"], [14, 4, 1, "", "label"], [14, 5, 1, "", "name"], [14, 3, 1, "", "read"], [14, 3, 1, "", "read_atoms"], [14, 3, 1, "", "reset"], [14, 3, 1, "", "set"], [14, 3, 1, "", "set_label"], [14, 3, 1, "", "todict"]], "matscipy.calculators.eam.io": [[14, 2, 1, "", "EAMParameters"], [14, 1, 1, "", "mix_eam"], [14, 1, 1, "", "read_eam"], [14, 1, 1, "", "write_eam"]], "matscipy.calculators.eam.io.EAMParameters": [[14, 5, 1, "", "atomic_masses"], [14, 5, 1, "", "atomic_numbers"], [14, 3, 1, "", "count"], [14, 5, 1, "", "crystal_structures"], [14, 5, 1, "", "cutoff"], [14, 5, 1, "", "density_grid_spacing"], [14, 5, 1, "", "distance_grid_spacing"], [14, 3, 1, "", "index"], [14, 5, 1, "", "lattice_constants"], [14, 5, 1, "", "number_of_density_grid_points"], [14, 5, 1, "", "number_of_distance_grid_points"], [14, 5, 1, "", "symbols"]], "matscipy.calculators.manybody.explicit_forms": [[15, 0, 0, "-", "harmonic"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[15, 2, 1, "", "HarmonicAngle"], [15, 2, 1, "", "HarmonicBond"], [15, 2, 1, "", "ZeroPair"], [15, 2, 1, "", "ZeroTriplet"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle": [[15, 5, 1, "", "__abstractmethods__"], [15, 5, 1, "", "__annotations__"], [15, 3, 1, "", "__call__"], [15, 5, 1, "", "__dict__"], [15, 3, 1, "", "__init__"], [15, 5, 1, "", "__module__"], [15, 5, 1, "", "__slots__"], [15, 5, 1, "", "__weakref__"], [15, 3, 1, "", "gradient"], [15, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond": [[15, 5, 1, "", "__abstractmethods__"], [15, 5, 1, "", "__annotations__"], [15, 3, 1, "", "__call__"], [15, 5, 1, "", "__dict__"], [15, 3, 1, "", "__init__"], [15, 5, 1, "", "__module__"], [15, 5, 1, "", "__slots__"], [15, 5, 1, "", "__weakref__"], [15, 3, 1, "", "gradient"], [15, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair": [[15, 5, 1, "", "__abstractmethods__"], [15, 5, 1, "", "__annotations__"], [15, 3, 1, "", "__call__"], [15, 5, 1, "", "__dict__"], [15, 5, 1, "", "__module__"], [15, 5, 1, "", "__slots__"], [15, 5, 1, "", "__weakref__"], [15, 3, 1, "", "gradient"], [15, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet": [[15, 5, 1, "", "__abstractmethods__"], [15, 5, 1, "", "__annotations__"], [15, 3, 1, "", "__call__"], [15, 5, 1, "", "__dict__"], [15, 5, 1, "", "__module__"], [15, 5, 1, "", "__slots__"], [15, 5, 1, "", "__weakref__"], [15, 3, 1, "", "gradient"], [15, 3, 1, "", "hessian"]], "matscipy.calculators.mcfm": [[16, 0, 0, "-", "calculator"], [16, 0, 0, "-", "cluster_data"], [17, 0, 0, "-", "mcfm_parallel"], [18, 0, 0, "-", "neighbour_list_mcfm"], [16, 0, 0, "-", "qm_cluster"], [19, 0, 0, "-", "qm_cluster_tools"]], "matscipy.calculators.mcfm.calculator": [[16, 2, 1, "", "MultiClusterForceMixingPotential"]], "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential": [[16, 3, 1, "", "__init__"], [16, 5, 1, "", "all_changes"], [16, 3, 1, "", "attach_hybrid_data"], [16, 3, 1, "", "band_structure"], [16, 3, 1, "", "calculate"], [16, 3, 1, "", "calculate_numerical_forces"], [16, 3, 1, "", "calculate_numerical_stress"], [16, 3, 1, "", "calculate_properties"], [16, 3, 1, "", "calculation_required"], [16, 3, 1, "", "check_state"], [16, 3, 1, "", "combine_qm_mm_forces"], [16, 3, 1, "", "compute_stress"], [16, 5, 1, "", "default_parameters"], [16, 4, 1, "", "directory"], [16, 5, 1, "", "discard_results_on_any_change"], [16, 3, 1, "", "evaluate_errors"], [16, 3, 1, "", "evaluate_qm_cluster_serial"], [16, 3, 1, "", "export_properties"], [16, 3, 1, "", "get_atoms"], [16, 3, 1, "", "get_charges"], [16, 3, 1, "", "get_default_parameters"], [16, 3, 1, "", "get_dipole_moment"], [16, 3, 1, "", "get_forces"], [16, 3, 1, "", "get_magnetic_moment"], [16, 3, 1, "", "get_magnetic_moments"], [16, 3, 1, "", "get_potential_energies"], [16, 3, 1, "", "get_potential_energy"], [16, 3, 1, "", "get_property"], [16, 3, 1, "", "get_stress"], [16, 3, 1, "", "get_stresses"], [16, 5, 1, "", "ignored_changes"], [16, 5, 1, "", "implemented_properties"], [16, 4, 1, "", "label"], [16, 3, 1, "", "print_message"], [16, 3, 1, "", "produce_classical_results"], [16, 3, 1, "", "produce_qm_clusters"], [16, 3, 1, "", "read"], [16, 3, 1, "", "read_atoms"], [16, 3, 1, "", "reset"], [16, 3, 1, "", "set"], [16, 3, 1, "", "set_label"], [16, 3, 1, "", "set_qm_atoms"], [16, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.cluster_data": [[16, 2, 1, "", "ClusterData"]], "matscipy.calculators.mcfm.cluster_data.ClusterData": [[16, 3, 1, "", "__init__"], [16, 5, 1, "", "forces"], [16, 5, 1, "", "mark"], [16, 5, 1, "", "qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[17, 0, 0, "-", "mcfm_parallel_control"], [17, 0, 0, "-", "mcfm_parallel_worker"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[17, 1, 1, "", "get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[17, 1, 1, "", "worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[18, 0, 0, "-", "neighbour_list_base"], [18, 0, 0, "-", "neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[18, 2, 1, "", "NeighbourListBase"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase": [[18, 3, 1, "", "get_neighbours"], [18, 3, 1, "", "update"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[18, 2, 1, "", "NeighbourListMCFM"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "do_update"], [18, 3, 1, "", "get_neighbours"], [18, 3, 1, "", "update"]], "matscipy.calculators.mcfm.qm_cluster": [[16, 2, 1, "", "QMCluster"]], "matscipy.calculators.mcfm.qm_cluster.QMCluster": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "attach_clustering_module"], [16, 3, 1, "", "attach_flagging_module"], [16, 3, 1, "", "attach_neighbour_list"], [16, 3, 1, "", "carve_cluster"], [16, 5, 1, "", "clustering_module"], [16, 5, 1, "", "flagging_module"], [16, 5, 1, "", "neighbour_list"], [16, 3, 1, "", "reset_energized_list"], [16, 3, 1, "", "update_qm_region"], [16, 5, 1, "", "verbose"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[19, 0, 0, "-", "base_qm_cluster_tool"], [19, 0, 0, "-", "qm_clustering_tool"], [19, 0, 0, "-", "qm_flagging_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[19, 2, 1, "", "BaseQMClusterTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "find_neighbours"], [19, 3, 1, "", "hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[19, 2, 1, "", "QMClusteringTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "carve_cluster"], [19, 3, 1, "", "complete_aromatic_rings"], [19, 3, 1, "", "create_buffer_region"], [19, 3, 1, "", "create_cluster_from_marks"], [19, 3, 1, "", "find_neighbours"], [19, 3, 1, "", "hydrogenate_cluster"], [19, 3, 1, "", "hydrogenate_dangling_bonds"], [19, 3, 1, "", "include_special_atom"], [19, 3, 1, "", "print_message"], [19, 3, 1, "", "replace_double_bond"], [19, 3, 1, "", "replace_single_bond"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[19, 2, 1, "", "QMFlaggingTool"], [19, 1, 1, "", "exponential_moving_average"], [19, 1, 1, "", "update_avg_property_per_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "create_cluster_around_atom"], [19, 3, 1, "", "expand_cluster"], [19, 3, 1, "", "find_neighbours"], [19, 3, 1, "", "get_energized_list"], [19, 3, 1, "", "hydrogenate_cluster"], [19, 3, 1, "", "join_clusters"], [19, 3, 1, "", "update_qm_region"]], "matscipy.calculators.pair_potential": [[20, 0, 0, "-", "calculator"]], "matscipy.calculators.pair_potential.calculator": [[20, 2, 1, "", "BeestKramerSanten"], [20, 2, 1, "", "CutoffInteraction"], [20, 2, 1, "", "FeneLJCut"], [20, 2, 1, "", "LennardJones84"], [20, 2, 1, "", "LennardJonesCut"], [20, 2, 1, "", "LennardJonesLinear"], [20, 2, 1, "", "LennardJonesQuadratic"], [20, 2, 1, "", "PairPotential"]], "matscipy.calculators.pair_potential.calculator.BeestKramerSanten": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "cutoff"], [20, 3, 1, "", "derivative"], [20, 3, 1, "", "first_derivative"], [20, 3, 1, "", "get_cutoff"], [20, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.CutoffInteraction": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "cutoff"], [20, 3, 1, "", "derivative"], [20, 3, 1, "", "first_derivative"], [20, 3, 1, "", "get_cutoff"], [20, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.FeneLJCut": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "cutoff"], [20, 3, 1, "", "derivative"], [20, 3, 1, "", "first_derivative"], [20, 3, 1, "", "get_cutoff"], [20, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJones84": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "cutoff"], [20, 3, 1, "", "derivative"], [20, 3, 1, "", "first_derivative"], [20, 3, 1, "", "get_cutoff"], [20, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesCut": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "cutoff"], [20, 3, 1, "", "derivative"], [20, 3, 1, "", "first_derivative"], [20, 3, 1, "", "get_cutoff"], [20, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesLinear": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "cutoff"], [20, 3, 1, "", "derivative"], [20, 3, 1, "", "first_derivative"], [20, 3, 1, "", "get_cutoff"], [20, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "cutoff"], [20, 3, 1, "", "derivative"], [20, 3, 1, "", "first_derivative"], [20, 3, 1, "", "get_cutoff"], [20, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.PairPotential": [[20, 3, 1, "", "__init__"], [20, 3, 1, "", "band_structure"], [20, 3, 1, "", "calculate"], [20, 3, 1, "", "calculate_numerical_forces"], [20, 3, 1, "", "calculate_numerical_stress"], [20, 3, 1, "", "calculate_properties"], [20, 3, 1, "", "calculation_required"], [20, 3, 1, "", "check_state"], [20, 5, 1, "", "default_parameters"], [20, 4, 1, "", "directory"], [20, 5, 1, "", "discard_results_on_any_change"], [20, 3, 1, "", "export_properties"], [20, 3, 1, "", "get_atoms"], [20, 3, 1, "", "get_birch_coefficients"], [20, 3, 1, "", "get_born_elastic_constants"], [20, 3, 1, "", "get_charges"], [20, 3, 1, "", "get_default_parameters"], [20, 3, 1, "", "get_dipole_moment"], [20, 3, 1, "", "get_dynamical_matrix"], [20, 3, 1, "", "get_elastic_constants"], [20, 3, 1, "", "get_forces"], [20, 3, 1, "", "get_hessian"], [20, 3, 1, "", "get_magnetic_moment"], [20, 3, 1, "", "get_magnetic_moments"], [20, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [20, 3, 1, "", "get_nonaffine_forces"], [20, 3, 1, "", "get_numerical_non_affine_forces"], [20, 3, 1, "", "get_potential_energies"], [20, 3, 1, "", "get_potential_energy"], [20, 3, 1, "", "get_property"], [20, 3, 1, "", "get_stress"], [20, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [20, 3, 1, "", "get_stresses"], [20, 5, 1, "", "ignored_changes"], [20, 5, 1, "", "implemented_properties"], [20, 4, 1, "", "label"], [20, 5, 1, "", "name"], [20, 3, 1, "", "read"], [20, 3, 1, "", "read_atoms"], [20, 3, 1, "", "reset"], [20, 3, 1, "", "set"], [20, 3, 1, "", "set_label"], [20, 3, 1, "", "todict"]], "matscipy.calculators.supercell_calculator": [[21, 2, 1, "", "SupercellCalculator"]], "matscipy.calculators.supercell_calculator.SupercellCalculator": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "band_structure"], [21, 3, 1, "", "calculate"], [21, 3, 1, "", "calculate_numerical_forces"], [21, 3, 1, "", "calculate_numerical_stress"], [21, 3, 1, "", "calculate_properties"], [21, 3, 1, "", "calculation_required"], [21, 3, 1, "", "check_state"], [21, 5, 1, "", "default_parameters"], [21, 4, 1, "", "directory"], [21, 5, 1, "", "discard_results_on_any_change"], [21, 3, 1, "", "export_properties"], [21, 3, 1, "", "get_atoms"], [21, 3, 1, "", "get_charges"], [21, 3, 1, "", "get_default_parameters"], [21, 3, 1, "", "get_dipole_moment"], [21, 3, 1, "", "get_forces"], [21, 3, 1, "", "get_magnetic_moment"], [21, 3, 1, "", "get_magnetic_moments"], [21, 3, 1, "", "get_potential_energies"], [21, 3, 1, "", "get_potential_energy"], [21, 3, 1, "", "get_property"], [21, 3, 1, "", "get_stress"], [21, 3, 1, "", "get_stresses"], [21, 5, 1, "", "ignored_changes"], [21, 5, 1, "", "implemented_properties"], [21, 4, 1, "", "label"], [21, 5, 1, "", "name"], [21, 3, 1, "", "read"], [21, 3, 1, "", "read_atoms"], [21, 3, 1, "", "reset"], [21, 3, 1, "", "set"], [21, 3, 1, "", "set_label"], [21, 3, 1, "", "todict"]], "matscipy.dislocation": [[1, 2, 1, "", "BCCEdge100110Dislocation"], [1, 2, 1, "", "BCCEdge100Dislocation"], [1, 2, 1, "", "BCCEdge111Dislocation"], [1, 2, 1, "", "BCCMixed111Dislocation"], [1, 2, 1, "", "BCCScrew111Dislocation"], [1, 2, 1, "", "BodyCenteredCubicOctahedralFactory"], [1, 2, 1, "", "BodyCenteredCubicTetrahedralFactory"], [1, 2, 1, "", "CubicCrystalDislocation"], [1, 2, 1, "", "CubicCrystalDissociatedDislocation"], [1, 2, 1, "", "DiamondGlide30degreePartial"], [1, 2, 1, "", "DiamondGlide60Degree"], [1, 2, 1, "", "DiamondGlide90degreePartial"], [1, 2, 1, "", "DiamondGlideScrew"], [1, 2, 1, "", "FCCEdge110Dislocation"], [1, 2, 1, "", "FCCEdgeShockleyPartial"], [1, 2, 1, "", "FCCScrew110Dislocation"], [1, 2, 1, "", "FCCScrewShockleyPartial"], [1, 2, 1, "", "FixedLineAtoms"], [1, 1, 1, "", "check_duplicates"], [1, 1, 1, "", "compare_configurations"], [1, 1, 1, "", "cost_function"], [1, 1, 1, "", "dipole_displacement_angle"], [1, 1, 1, "", "fit_core_position"], [1, 1, 1, "", "fit_core_position_images"], [1, 1, 1, "", "gamma_line"], [1, 1, 1, "", "get_centering_mask"], [1, 1, 1, "", "get_elastic_constants"], [1, 1, 1, "", "get_u_img"], [1, 1, 1, "", "make_barrier_configurations"], [1, 1, 1, "", "make_edge_cyl"], [1, 1, 1, "", "make_edge_cyl_001_100"], [1, 1, 1, "", "make_screw_cyl"], [1, 1, 1, "", "make_screw_cyl_kink"], [1, 1, 1, "", "make_screw_quadrupole"], [1, 1, 1, "", "make_screw_quadrupole_kink"], [1, 1, 1, "", "ovito_dxa_straight_dislo_info"], [1, 1, 1, "", "plot_bulk"], [1, 1, 1, "", "plot_vitek"], [1, 1, 1, "", "read_dislo_QMMM"], [1, 1, 1, "", "screw_cyl_octahedral"], [1, 1, 1, "", "screw_cyl_tetrahedral"], [1, 1, 1, "", "show_NEB_configurations"], [1, 1, 1, "", "show_configuration"], [1, 1, 1, "", "slice_long_dislo"]], "matscipy.dislocation.BCCEdge100110Dislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCEdge100Dislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCEdge111Dislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCMixed111Dislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCScrew111Dislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BodyCenteredCubicOctahedralFactory": [[1, 3, 1, "", "align"], [1, 5, 1, "", "atoms_in_unit_cell"], [1, 5, 1, "", "basis_factor"], [1, 5, 1, "", "bravais_basis"], [1, 3, 1, "", "calc_num_atoms"], [1, 3, 1, "", "check_basis_volume"], [1, 5, 1, "", "chop_tolerance"], [1, 3, 1, "", "convert_to_natural_basis"], [1, 5, 1, "", "element_basis"], [1, 3, 1, "", "find_directions"], [1, 3, 1, "", "find_ortho"], [1, 3, 1, "", "get_lattice_constant"], [1, 3, 1, "", "inside"], [1, 5, 1, "", "int_basis"], [1, 5, 1, "", "inverse_basis"], [1, 5, 1, "", "inverse_basis_factor"], [1, 3, 1, "", "make_crystal_basis"], [1, 3, 1, "", "make_list_of_atoms"], [1, 3, 1, "", "make_unit_cell"], [1, 5, 1, "", "other"], [1, 3, 1, "", "print_directions_and_miller"], [1, 3, 1, "", "process_element"], [1, 3, 1, "", "put_atom"], [1, 5, 1, "", "xtal_name"]], "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory": [[1, 3, 1, "", "align"], [1, 5, 1, "", "atoms_in_unit_cell"], [1, 5, 1, "", "basis_factor"], [1, 5, 1, "", "bravais_basis"], [1, 3, 1, "", "calc_num_atoms"], [1, 3, 1, "", "check_basis_volume"], [1, 5, 1, "", "chop_tolerance"], [1, 3, 1, "", "convert_to_natural_basis"], [1, 5, 1, "", "element_basis"], [1, 3, 1, "", "find_directions"], [1, 3, 1, "", "find_ortho"], [1, 3, 1, "", "get_lattice_constant"], [1, 3, 1, "", "inside"], [1, 5, 1, "", "int_basis"], [1, 5, 1, "", "inverse_basis"], [1, 5, 1, "", "inverse_basis_factor"], [1, 3, 1, "", "make_crystal_basis"], [1, 3, 1, "", "make_list_of_atoms"], [1, 3, 1, "", "make_unit_cell"], [1, 5, 1, "", "other"], [1, 3, 1, "", "print_directions_and_miller"], [1, 3, 1, "", "process_element"], [1, 3, 1, "", "put_atom"], [1, 5, 1, "", "xtal_name"]], "matscipy.dislocation.CubicCrystalDislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.CubicCrystalDissociatedDislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlide30degreePartial": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlide60Degree": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlide90degreePartial": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlideScrew": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCEdge110Dislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCEdgeShockleyPartial": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCScrew110Dislocation": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCScrewShockleyPartial": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "build_cylinder"], [1, 3, 1, "", "build_glide_configurations"], [1, 3, 1, "", "build_impurity_cylinder"], [1, 3, 1, "", "displacements"], [1, 3, 1, "", "init_stroh"], [1, 3, 1, "", "plot_unit_cell"], [1, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FixedLineAtoms": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "adjust_forces"], [1, 3, 1, "", "adjust_positions"]], "matscipy.elasticity": [[12, 2, 1, "", "CubicElasticModuli"], [12, 1, 1, "", "Voigt_6_to_full_3x3_strain"], [12, 1, 1, "", "Voigt_6_to_full_3x3_stress"], [12, 1, 1, "", "Voigt_6x6_to_cubic"], [12, 1, 1, "", "Voigt_6x6_to_full_3x3x3x3"], [12, 1, 1, "", "cubic_to_Voigt_6x6"], [12, 1, 1, "", "elastic_moduli"], [12, 1, 1, "", "fit_elastic_constants"], [12, 1, 1, "", "full_3x3_to_Voigt_6_index"], [12, 1, 1, "", "full_3x3_to_Voigt_6_strain"], [12, 1, 1, "", "full_3x3_to_Voigt_6_stress"], [12, 1, 1, "", "full_3x3x3x3_to_Voigt_6x6"], [12, 1, 1, "", "generate_strained_configs"], [12, 1, 1, "", "invariants"], [12, 1, 1, "", "measure_triclinic_elastic_constants"], [12, 1, 1, "", "nonaffine_elastic_contribution"], [12, 1, 1, "", "poisson_ratio"], [12, 1, 1, "", "rotate_cubic_elastic_constants"], [12, 1, 1, "", "rotate_elastic_constants"], [12, 1, 1, "", "youngs_modulus"]], "matscipy.elasticity.CubicElasticModuli": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "compliance"], [12, 3, 1, "", "rotate"], [12, 3, 1, "", "stiffness"], [12, 5, 1, "", "tol"]], "matscipy.fracture_mechanics": [[23, 0, 0, "-", "clusters"], [23, 0, 0, "-", "crack"], [23, 0, 0, "-", "crackpathsel"], [23, 0, 0, "-", "energy_release"], [23, 0, 0, "-", "idealbrittlesolid"]], "matscipy.fracture_mechanics.clusters": [[23, 1, 1, "", "bcc"], [23, 1, 1, "", "cluster"], [23, 1, 1, "", "diamond"], [23, 1, 1, "", "fcc"], [23, 1, 1, "", "sc"], [23, 1, 1, "", "set_groups"], [23, 1, 1, "", "set_regions"]], "matscipy.fracture_mechanics.crack": [[23, 2, 1, "", "ConstantStrainRate"], [23, 2, 1, "", "CubicCrystalCrack"], [23, 1, 1, "", "G_to_strain"], [23, 2, 1, "", "IsotropicStressField"], [23, 2, 1, "", "RectilinearAnisotropicCrack"], [23, 2, 1, "", "SinclairCrack"], [23, 1, 1, "", "deformation_gradient_residual"], [23, 1, 1, "", "deformation_gradient_residuals"], [23, 1, 1, "", "displacement_residual"], [23, 1, 1, "", "displacement_residuals"], [23, 1, 1, "", "find_tip_broken_bonds"], [23, 1, 1, "", "find_tip_coordination"], [23, 1, 1, "", "find_tip_stress_field"], [23, 1, 1, "", "fit_crack_stress_field"], [23, 1, 1, "", "get_energy_release_rate"], [23, 1, 1, "", "get_strain"], [23, 1, 1, "", "get_stress_intensity_factor"], [23, 1, 1, "", "isotropic_modeI_crack_tip_displacement_field"], [23, 1, 1, "", "isotropic_modeI_crack_tip_stress_field"], [23, 1, 1, "", "plot_stress_fields"], [23, 1, 1, "", "print_crack_system"], [23, 1, 1, "", "strain_to_G"], [23, 1, 1, "", "thin_strip_displacement_y"]], "matscipy.fracture_mechanics.crack.ConstantStrainRate": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "adjust_forces"], [23, 3, 1, "", "adjust_positions"], [23, 3, 1, "", "apply_strain"], [23, 3, 1, "", "copy"]], "matscipy.fracture_mechanics.crack.CubicCrystalCrack": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "crack_tip_position"], [23, 3, 1, "", "crack_tip_position_y"], [23, 3, 1, "", "deformation_gradient"], [23, 3, 1, "", "deformation_gradient_from_cartesian_coordinates"], [23, 3, 1, "", "deformation_gradient_from_cylinder_coordinates"], [23, 3, 1, "", "displacements"], [23, 3, 1, "", "displacements_from_cartesian_coordinates"], [23, 3, 1, "", "displacements_from_cylinder_coordinates"], [23, 3, 1, "", "k1g"], [23, 3, 1, "", "k1gsqG"], [23, 3, 1, "", "scale_displacements"], [23, 3, 1, "", "stresses"], [23, 3, 1, "", "stresses_from_cartesian_coordinates"], [23, 3, 1, "", "stresses_from_cylinder_coordinates"]], "matscipy.fracture_mechanics.crack.IsotropicStressField": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "get_stresses"]], "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "deformation_gradient"], [23, 3, 1, "", "displacements"], [23, 3, 1, "", "k1g"], [23, 3, 1, "", "k1gsqG"], [23, 3, 1, "", "rtheta"], [23, 3, 1, "", "set_plane_strain"], [23, 3, 1, "", "set_plane_stress"], [23, 3, 1, "", "stresses"]], "matscipy.fracture_mechanics.crack.SinclairCrack": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "animate"], [23, 3, 1, "", "arc_length_continuation"], [23, 3, 1, "", "fit_cle"], [23, 3, 1, "", "get_crack_tip_force"], [23, 3, 1, "", "get_dofs"], [23, 3, 1, "", "get_forces"], [23, 3, 1, "", "get_k_force"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_precon"], [23, 3, 1, "", "get_xdot"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "pack"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "rescale_k"], [23, 3, 1, "", "set_atoms"], [23, 3, 1, "", "set_dofs"], [23, 3, 1, "", "u_cle"], [23, 3, 1, "", "unpack"], [23, 3, 1, "", "update_atoms"], [23, 3, 1, "", "update_precon"]], "matscipy.fracture_mechanics.energy_release": [[23, 1, 1, "", "J_integral"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[23, 2, 1, "", "IdealBrittleSolid"], [23, 1, 1, "", "extend_strip"], [23, 1, 1, "", "find_crack_tip"], [23, 1, 1, "", "find_triangles_2d"], [23, 1, 1, "", "set_constraints"], [23, 1, 1, "", "set_initial_velocities"], [23, 1, 1, "", "triangular_lattice_slab"]], "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "band_structure"], [23, 3, 1, "", "calculate"], [23, 3, 1, "", "calculate_numerical_forces"], [23, 3, 1, "", "calculate_numerical_stress"], [23, 3, 1, "", "calculate_properties"], [23, 3, 1, "", "calculation_required"], [23, 3, 1, "", "check_state"], [23, 5, 1, "", "default_parameters"], [23, 4, 1, "", "directory"], [23, 5, 1, "", "discard_results_on_any_change"], [23, 3, 1, "", "export_properties"], [23, 3, 1, "", "get_atoms"], [23, 3, 1, "", "get_charges"], [23, 3, 1, "", "get_default_parameters"], [23, 3, 1, "", "get_dipole_moment"], [23, 3, 1, "", "get_elastic_moduli"], [23, 3, 1, "", "get_forces"], [23, 3, 1, "", "get_magnetic_moment"], [23, 3, 1, "", "get_magnetic_moments"], [23, 3, 1, "", "get_poisson_ratio"], [23, 3, 1, "", "get_potential_energies"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_property"], [23, 3, 1, "", "get_stress"], [23, 3, 1, "", "get_stresses"], [23, 3, 1, "", "get_wave_speeds"], [23, 3, 1, "", "get_youngs_modulus"], [23, 5, 1, "", "ignored_changes"], [23, 5, 1, "", "implemented_properties"], [23, 4, 1, "", "label"], [23, 3, 1, "", "read"], [23, 3, 1, "", "read_atoms"], [23, 3, 1, "", "reset"], [23, 3, 1, "", "set"], [23, 3, 1, "", "set_label"], [23, 3, 1, "", "set_reference_crystal"], [23, 3, 1, "", "todict"]], "matscipy.hydrogenate": [[12, 1, 1, "", "hydrogenate"]], "matscipy.logger": [[12, 2, 1, "", "Logger"], [12, 1, 1, "", "flatten"], [12, 1, 1, "", "hdr_str"], [12, 1, 1, "", "hdrfmt_str"], [12, 1, 1, "", "numfmt_str"]], "matscipy.logger.Logger": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "flush"], [12, 3, 1, "", "get_logfile"], [12, 3, 1, "", "has_logfile"], [12, 3, 1, "", "iteration_finished"], [12, 3, 1, "", "pr"], [12, 3, 1, "", "set_logfile"], [12, 3, 1, "", "set_outevery"], [12, 3, 1, "", "st"], [12, 3, 1, "", "warn"]], "matscipy.neighbours": [[12, 2, 1, "", "CutoffNeighbourhood"], [12, 2, 1, "", "MolecularNeighbourhood"], [12, 2, 1, "", "Neighbourhood"], [12, 1, 1, "", "find_common_neighbours"], [12, 1, 1, "", "find_indices_of_reversed_pairs"], [12, 1, 1, "", "mic"], [12, 1, 1, "", "neighbour_list"], [12, 1, 1, "", "triplet_list"]], "matscipy.neighbours.CutoffNeighbourhood": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "compute_distances"], [12, 3, 1, "", "connected_triplets"], [12, 3, 1, "", "double_neighbourhood"], [12, 3, 1, "", "find_triplet_types"], [12, 3, 1, "", "get_pairs"], [12, 3, 1, "", "get_triplets"], [12, 3, 1, "", "lexsort"], [12, 3, 1, "", "make_result"], [12, 3, 1, "", "mask"], [12, 3, 1, "", "reverse_pair_indices"], [12, 3, 1, "", "triplet_to_numbers"]], "matscipy.neighbours.MolecularNeighbourhood": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "complete_connectivity"], [12, 3, 1, "", "compute_distances"], [12, 3, 1, "", "connected_triplets"], [12, 3, 1, "", "double_connectivity"], [12, 3, 1, "", "double_neighbourhood"], [12, 3, 1, "", "find_triplet_types"], [12, 3, 1, "", "get_pairs"], [12, 3, 1, "", "get_triplets"], [12, 3, 1, "", "lexsort"], [12, 3, 1, "", "make_result"], [12, 3, 1, "", "mask"], [12, 4, 1, "", "molecules"], [12, 4, 1, "", "pair_type"], [12, 3, 1, "", "reverse_pair_indices"], [12, 3, 1, "", "triplet_to_numbers"], [12, 4, 1, "", "triplet_type"]], "matscipy.neighbours.Neighbourhood": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "compute_distances"], [12, 3, 1, "", "connected_triplets"], [12, 3, 1, "", "double_neighbourhood"], [12, 3, 1, "", "find_triplet_types"], [12, 3, 1, "", "get_pairs"], [12, 3, 1, "", "get_triplets"], [12, 3, 1, "", "lexsort"], [12, 3, 1, "", "make_result"], [12, 3, 1, "", "mask"], [12, 3, 1, "", "reverse_pair_indices"], [12, 3, 1, "", "triplet_to_numbers"]], "matscipy.numerical": [[5, 1, 1, "", "get_derivative_volume"], [5, 1, 1, "", "get_derivative_wave_vector"], [5, 1, 1, "", "numerical_forces"], [5, 1, 1, "", "numerical_hessian"], [5, 1, 1, "", "numerical_nonaffine_forces"], [5, 1, 1, "", "numerical_nonaffine_forces_reference"], [5, 1, 1, "", "numerical_stress"]], "matscipy.rings": [[12, 1, 1, "", "ring_statistics"]], "matscipy.socketcalc": [[12, 2, 1, "", "AtomsRequestHandler"], [12, 5, 1, "", "AtomsServer"], [12, 2, 1, "", "AtomsServerAsync"], [12, 2, 1, "", "AtomsServerSync"], [12, 2, 1, "", "CastepClient"], [12, 2, 1, "", "Client"], [12, 2, 1, "", "QMClient"], [12, 2, 1, "", "QUIPClient"], [12, 2, 1, "", "SocketCalculator"], [12, 2, 1, "", "VaspClient"], [12, 1, 1, "", "pack_atoms_to_reftraj_str"], [12, 1, 1, "", "pack_atoms_to_xyz_str"], [12, 1, 1, "", "pack_results_to_reftraj_output_str"], [12, 1, 1, "", "unpack_reftraj_output_str_to_results"], [12, 1, 1, "", "unpack_reftraj_str_to_atoms"], [12, 1, 1, "", "unpack_xyz_str_to_results"]], "matscipy.socketcalc.AtomsRequestHandler": [[12, 3, 1, "", "__init__"], [12, 5, 1, "", "disable_nagle_algorithm"], [12, 3, 1, "", "finish"], [12, 3, 1, "", "handle"], [12, 5, 1, "", "rbufsize"], [12, 3, 1, "", "setup"], [12, 5, 1, "", "timeout"], [12, 5, 1, "", "wbufsize"]], "matscipy.socketcalc.AtomsServerAsync": [[12, 3, 1, "", "__init__"], [12, 5, 1, "", "address_family"], [12, 5, 1, "", "allow_reuse_address"], [12, 5, 1, "", "block_on_close"], [12, 3, 1, "", "close_request"], [12, 5, 1, "", "daemon_threads"], [12, 3, 1, "", "fileno"], [12, 3, 1, "", "finish_request"], [12, 3, 1, "", "get_request"], [12, 3, 1, "", "get_results"], [12, 3, 1, "", "handle_error"], [12, 3, 1, "", "handle_request"], [12, 3, 1, "", "handle_timeout"], [12, 3, 1, "", "join_all"], [12, 3, 1, "", "process_request"], [12, 3, 1, "", "process_request_thread"], [12, 3, 1, "", "put"], [12, 5, 1, "", "request_queue_size"], [12, 3, 1, "", "serve_forever"], [12, 3, 1, "", "server_activate"], [12, 3, 1, "", "server_bind"], [12, 3, 1, "", "server_close"], [12, 3, 1, "", "service_actions"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "shutdown_clients"], [12, 3, 1, "", "shutdown_request"], [12, 5, 1, "", "socket_type"], [12, 5, 1, "", "timeout"], [12, 3, 1, "", "verify_request"]], "matscipy.socketcalc.AtomsServerSync": [[12, 3, 1, "", "__init__"], [12, 5, 1, "", "address_family"], [12, 5, 1, "", "allow_reuse_address"], [12, 3, 1, "", "close_request"], [12, 3, 1, "", "fileno"], [12, 3, 1, "", "finish_request"], [12, 3, 1, "", "get_request"], [12, 3, 1, "", "get_results"], [12, 3, 1, "", "handle_error"], [12, 3, 1, "", "handle_request"], [12, 3, 1, "", "handle_timeout"], [12, 3, 1, "", "join_all"], [12, 3, 1, "", "process_request"], [12, 3, 1, "", "put"], [12, 5, 1, "", "request_queue_size"], [12, 3, 1, "", "serve_forever"], [12, 3, 1, "", "server_activate"], [12, 3, 1, "", "server_bind"], [12, 3, 1, "", "server_close"], [12, 3, 1, "", "service_actions"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "shutdown_clients"], [12, 3, 1, "", "shutdown_request"], [12, 5, 1, "", "socket_type"], [12, 5, 1, "", "timeout"], [12, 3, 1, "", "verify_request"]], "matscipy.socketcalc.CastepClient": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_args"], [12, 3, 1, "", "is_compatible"], [12, 3, 1, "", "postprocess"], [12, 3, 1, "", "preprocess"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "start"], [12, 3, 1, "", "start_or_restart"], [12, 3, 1, "", "wait_for_shutdown"], [12, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.Client": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_args"], [12, 3, 1, "", "is_compatible"], [12, 3, 1, "", "postprocess"], [12, 3, 1, "", "preprocess"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "start"], [12, 3, 1, "", "start_or_restart"], [12, 3, 1, "", "wait_for_shutdown"], [12, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.QMClient": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_args"], [12, 3, 1, "", "is_compatible"], [12, 3, 1, "", "postprocess"], [12, 3, 1, "", "preprocess"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "start"], [12, 3, 1, "", "start_or_restart"], [12, 3, 1, "", "wait_for_shutdown"], [12, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.QUIPClient": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_args"], [12, 3, 1, "", "is_compatible"], [12, 3, 1, "", "postprocess"], [12, 3, 1, "", "preprocess"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "start"], [12, 3, 1, "", "start_or_restart"], [12, 3, 1, "", "wait_for_shutdown"], [12, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.SocketCalculator": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "band_structure"], [12, 3, 1, "", "calculate"], [12, 3, 1, "", "calculate_numerical_forces"], [12, 3, 1, "", "calculate_numerical_stress"], [12, 3, 1, "", "calculate_properties"], [12, 3, 1, "", "calculation_required"], [12, 3, 1, "", "check_state"], [12, 5, 1, "", "default_parameters"], [12, 4, 1, "", "directory"], [12, 5, 1, "", "discard_results_on_any_change"], [12, 3, 1, "", "export_properties"], [12, 3, 1, "", "get_atoms"], [12, 3, 1, "", "get_charges"], [12, 3, 1, "", "get_default_parameters"], [12, 3, 1, "", "get_dipole_moment"], [12, 3, 1, "", "get_forces"], [12, 3, 1, "", "get_magnetic_moment"], [12, 3, 1, "", "get_magnetic_moments"], [12, 3, 1, "", "get_potential_energies"], [12, 3, 1, "", "get_potential_energy"], [12, 3, 1, "", "get_property"], [12, 3, 1, "", "get_stress"], [12, 3, 1, "", "get_stresses"], [12, 5, 1, "", "ignored_changes"], [12, 5, 1, "", "implemented_properties"], [12, 4, 1, "", "label"], [12, 5, 1, "", "name"], [12, 3, 1, "", "read"], [12, 3, 1, "", "read_atoms"], [12, 3, 1, "", "reset"], [12, 3, 1, "", "set"], [12, 3, 1, "", "set_label"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "todict"]], "matscipy.socketcalc.VaspClient": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "extra_args"], [12, 3, 1, "", "is_compatible"], [12, 3, 1, "", "postprocess"], [12, 3, 1, "", "preprocess"], [12, 3, 1, "", "shutdown"], [12, 3, 1, "", "start"], [12, 3, 1, "", "start_or_restart"], [12, 3, 1, "", "wait_for_shutdown"], [12, 3, 1, "", "write_input_files"]], "matscipy.surface": [[12, 1, 1, "", "MillerDirection"], [12, 2, 1, "", "MillerIndex"], [12, 1, 1, "", "MillerPlane"], [12, 1, 1, "", "angle_between"], [12, 1, 1, "", "gcd"], [12, 1, 1, "", "make_unit_slab"]], "matscipy.surface.MillerIndex": [[12, 5, 1, "", "ALIGNED"], [12, 5, 1, "", "BEHAVED"], [12, 5, 1, "", "CARRAY"], [12, 5, 1, "", "C_CONTIGUOUS"], [12, 5, 1, "", "FARRAY"], [12, 5, 1, "", "FNC"], [12, 5, 1, "", "FORC"], [12, 5, 1, "", "F_CONTIGUOUS"], [12, 5, 1, "", "OWNDATA"], [12, 5, 1, "", "T"], [12, 5, 1, "", "WRITEABLE"], [12, 5, 1, "", "WRITEBACKIFCOPY"], [12, 3, 1, "", "all"], [12, 5, 1, "", "all_brackets"], [12, 3, 1, "", "angle"], [12, 3, 1, "", "any"], [12, 3, 1, "", "argmax"], [12, 3, 1, "", "argmin"], [12, 3, 1, "", "argpartition"], [12, 3, 1, "", "argsort"], [12, 3, 1, "", "as3"], [12, 3, 1, "", "as4"], [12, 3, 1, "", "astype"], [12, 5, 1, "", "base"], [12, 5, 1, "", "brackets"], [12, 3, 1, "", "byteswap"], [12, 3, 1, "", "choose"], [12, 3, 1, "", "clip"], [12, 3, 1, "", "compress"], [12, 3, 1, "", "conj"], [12, 3, 1, "", "conjugate"], [12, 3, 1, "", "copy"], [12, 3, 1, "", "cosine"], [12, 3, 1, "", "cross"], [12, 5, 1, "", "ctypes"], [12, 3, 1, "", "cumprod"], [12, 3, 1, "", "cumsum"], [12, 5, 1, "", "data"], [12, 3, 1, "", "diagonal"], [12, 3, 1, "", "dot"], [12, 5, 1, "", "dtype"], [12, 3, 1, "", "dump"], [12, 3, 1, "", "dumps"], [12, 3, 1, "", "fill"], [12, 5, 1, "", "flags"], [12, 5, 1, "", "flat"], [12, 3, 1, "", "flatten"], [12, 3, 1, "", "getfield"], [12, 3, 1, "", "hat"], [12, 5, 1, "", "imag"], [12, 3, 1, "", "item"], [12, 3, 1, "", "itemset"], [12, 5, 1, "", "itemsize"], [12, 3, 1, "", "latex"], [12, 3, 1, "", "max"], [12, 3, 1, "", "mean"], [12, 3, 1, "", "min"], [12, 5, 1, "", "nbytes"], [12, 5, 1, "", "ndim"], [12, 3, 1, "", "newbyteorder"], [12, 3, 1, "", "nonzero"], [12, 3, 1, "", "norm"], [12, 3, 1, "", "normalised"], [12, 3, 1, "", "parse"], [12, 3, 1, "", "partition"], [12, 3, 1, "", "plane_spacing"], [12, 3, 1, "", "prod"], [12, 3, 1, "", "ptp"], [12, 3, 1, "", "put"], [12, 3, 1, "", "ravel"], [12, 5, 1, "", "real"], [12, 3, 1, "", "repeat"], [12, 3, 1, "", "reshape"], [12, 3, 1, "", "resize"], [12, 3, 1, "", "round"], [12, 3, 1, "", "searchsorted"], [12, 3, 1, "", "setfield"], [12, 3, 1, "", "setflags"], [12, 5, 1, "", "shape"], [12, 3, 1, "", "simplified"], [12, 3, 1, "", "simplify"], [12, 5, 1, "", "size"], [12, 3, 1, "", "sort"], [12, 3, 1, "", "squeeze"], [12, 3, 1, "", "std"], [12, 5, 1, "", "strides"], [12, 3, 1, "", "sum"], [12, 3, 1, "", "swapaxes"], [12, 3, 1, "", "take"], [12, 3, 1, "", "tobytes"], [12, 3, 1, "", "tofile"], [12, 3, 1, "", "tolist"], [12, 3, 1, "", "tostring"], [12, 3, 1, "", "trace"], [12, 3, 1, "", "transpose"], [12, 3, 1, "", "var"], [12, 3, 1, "", "view"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"calcul": [0, 1, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21], "disloc": 1, "cell": 1, "vector": 1, "refer": [1, 7], "elast": [2, 9, 12], "fractur": [3, 10], "mechan": [3, 10], "neighbour": [4, 12], "list": 4, "numer": 5, "matscipi": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "root": 6, "api": 7, "constant": 9, "quick": 11, "start": 11, "document": 11, "seek": 11, "help": 11, "contribut": 11, "run": 11, "test": 11, "depend": 11, "fund": 11, "tabl": 11, "content": [11, 12, 22, 23], "indic": 11, "packag": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "subpackag": 12, "submodul": [12, 22, 23], "angle_distribut": 12, "modul": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "atomic_strain": 12, "paramet": 12, "return": 12, "hydrogen": 12, "io": [12, 14], "logger": 12, "ring": 12, "socketcalc": 12, "structure_identif": 12, "surfac": 12, "eam": 14, "average_atom": 14, "manybodi": 15, "explicit_form": 15, "mcfm": [16, 17, 18, 19], "result": 16, "ar": 16, "formula": 16, "stress": 16, "evalu": 16, "i": 16, "For": 16, "now": 16, "verbos": 16, "level": 16, "cluster_data": 16, "qm_cluster": 16, "It": 16, "act": 16, "mediat": 16, "between": 16, "mcfm_parallel": 17, "mcfm_parallel_control": 17, "mcfm_parallel_work": 17, "neighbour_list_mcfm": 18, "neighbour_list_bas": 18, "qm_cluster_tool": 19, "base_qm_cluster_tool": 19, "qm_clustering_tool": 19, "qm_flagging_tool": 19, "pair_potenti": 20, "supercell_calcul": 21, "contact_mechan": 22, "dmt": 22, "hertz": 22, "jkr": 22, "greens_funct": 22, "fracture_mechan": 23, "cluster": 23, "crack": 23, "crackpathsel": 23, "energy_releas": 23, "idealbrittlesolid": 23, "plastic": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Calculators": [[0, "module-matscipy.calculators"], [8, "calculators"]], "Dislocation": [[1, "dislocation"]], "Calculation of cell vectors": [[1, "calculation-of-cell-vectors"]], "References:": [[1, "references"]], "Elasticity": [[2, "module-matscipy.elasticity"]], "Fracture Mechanics": [[3, "module-matscipy.fracture_mechanics"], [10, "fracture-mechanics"]], "Neighbour lists": [[4, "module-matscipy.neighbours"]], "Numerical": [[5, "module-matscipy.numerical"]], "Matscipy root": [[6, "module-matscipy"]], "API Reference": [[7, "api-reference"]], "Elastic Constants": [[9, "elastic-constants"]], "Matscipy": [[11, "matscipy"]], "Quick start": [[11, "quick-start"]], "Documentation": [[11, "documentation"]], "Seeking help": [[11, "seeking-help"]], "Contributing": [[11, "contributing"]], "Running tests": [[11, "running-tests"]], "Dependencies": [[11, "dependencies"]], "Funding": [[11, "funding"]], "Table of Contents:": [[11, null]], "Indices and tables": [[11, "indices-and-tables"]], "matscipy package": [[12, "matscipy-package"]], "Subpackages": [[12, "subpackages"]], "Submodules": [[12, "submodules"], [22, "submodules"], [23, "submodules"]], "matscipy.angle_distribution module": [[12, "module-matscipy.angle_distribution"]], "matscipy.atomic_strain module": [[12, "module-matscipy.atomic_strain"]], "Parameters:": [[12, "parameters"]], "Returns:": [[12, "returns"]], "matscipy.elasticity module": [[12, "module-matscipy.elasticity"]], "matscipy.hydrogenate module": [[12, "module-matscipy.hydrogenate"]], "matscipy.io module": [[12, "module-matscipy.io"]], "matscipy.logger module": [[12, "module-matscipy.logger"]], "matscipy.neighbours module": [[12, "module-matscipy.neighbours"]], "matscipy.rings module": [[12, "module-matscipy.rings"]], "matscipy.socketcalc module": [[12, "module-matscipy.socketcalc"]], "matscipy.structure_identification module": [[12, "matscipy-structure-identification-module"]], "matscipy.surface module": [[12, "module-matscipy.surface"]], "Module contents": [[12, "module-matscipy"], [22, "module-contents"], [23, "module-matscipy.fracture_mechanics"]], "matscipy.calculators package": [[13, "module-matscipy.calculators"]], "Packages": [[13, "packages"], [16, "packages"]], "Modules": [[13, "modules"], [14, "modules"], [15, "modules"], [16, "modules"], [17, "modules"], [18, "modules"], [19, "modules"], [20, "modules"]], "matscipy.calculators.eam package": [[14, "module-matscipy.calculators.eam"]], "matscipy.calculators.eam.calculator module": [[14, "module-matscipy.calculators.eam.calculator"]], "matscipy.ios.eam.io module": [[14, "module-matscipy.calculators.eam.io"]], "matscipy.average_atoms.eam.average_atom module": [[14, "module-matscipy.calculators.eam.average_atom"]], "matscipy.calculators.manybody package": [[15, "module-matscipy.calculators.manybody"]], "matscipy.calculators.manybody.explicit_forms": [[15, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "matscipy.calculators.mcfm package": [[16, "module-matscipy.calculators.mcfm"]], "matscipy.calculators.mcfm.calculator module": [[16, "module-matscipy.calculators.mcfm.calculator"]], "results are": [[16, "results-are"]], "the formula for stress evaluation is": [[16, "the-formula-for-stress-evaluation-is"]], "For now verbose levels are": [[16, "for-now-verbose-levels-are"]], "matscipy.calculators.mcfm.cluster_data module": [[16, "module-matscipy.calculators.mcfm.cluster_data"]], "matscipy.calculators.mcfm.qm_cluster module": [[16, "module-matscipy.calculators.mcfm.qm_cluster"]], "It acts as a mediator between": [[16, "it-acts-as-a-mediator-between"], [16, "id1"]], "matscipy.calculators.mcfm.mcfm_parallel package": [[17, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "matscipy.calculators.mcfm.mcfm_parallel_control module": [[17, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.mcfm_parallel_worker module": [[17, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "matscipy.calculators.mcfm.neighbour_list_mcfm package": [[18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base module": [[18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm module": [[18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.qm_cluster_tools package": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool module": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tools module": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool module": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "matscipy.calculators.pair_potential package": [[20, "module-matscipy.calculators.pair_potential"]], "matscipy.calculators.pair_potential.calculator module": [[20, "module-matscipy.calculators.pair_potential.calculator"]], "matscipy.calculators.supercell_calculator module": [[21, "module-matscipy.calculators.supercell_calculator"]], "matscipy.contact_mechanics package": [[22, "matscipy-contact-mechanics-package"]], "matscipy.contact_mechanics.DMT module": [[22, "matscipy-contact-mechanics-dmt-module"]], "matscipy.contact_mechanics.Hertz module": [[22, "matscipy-contact-mechanics-hertz-module"]], "matscipy.contact_mechanics.JKR module": [[22, "matscipy-contact-mechanics-jkr-module"]], "matscipy.contact_mechanics.greens_function module": [[22, "matscipy-contact-mechanics-greens-function-module"]], "matscipy.fracture_mechanics package": [[23, "matscipy-fracture-mechanics-package"]], "matscipy.fracture_mechanics.clusters module": [[23, "module-matscipy.fracture_mechanics.clusters"]], "matscipy.fracture_mechanics.crack module": [[23, "module-matscipy.fracture_mechanics.crack"]], "matscipy.fracture_mechanics.crackpathsel module": [[23, "module-matscipy.fracture_mechanics.crackpathsel"]], "matscipy.fracture_mechanics.energy_release module": [[23, "module-matscipy.fracture_mechanics.energy_release"]], "matscipy.fracture_mechanics.idealbrittlesolid module": [[23, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "matscipy": [[24, "matscipy"]], "Plasticity": [[25, "plasticity"]]}, "indexentries": {"matscipy.calculators": [[0, "module-matscipy.calculators"], [13, "module-matscipy.calculators"]], "module": [[0, "module-matscipy.calculators"], [1, "module-matscipy.dislocation"], [2, "module-matscipy.elasticity"], [3, "module-matscipy.fracture_mechanics"], [4, "module-matscipy.neighbours"], [5, "module-matscipy.numerical"], [6, "module-matscipy"], [12, "module-matscipy"], [12, "module-matscipy.angle_distribution"], [12, "module-matscipy.atomic_strain"], [12, "module-matscipy.elasticity"], [12, "module-matscipy.hydrogenate"], [12, "module-matscipy.io"], [12, "module-matscipy.logger"], [12, "module-matscipy.neighbours"], [12, "module-matscipy.rings"], [12, "module-matscipy.socketcalc"], [12, "module-matscipy.surface"], [13, "module-matscipy.calculators"], [14, "module-matscipy.calculators.eam"], [14, "module-matscipy.calculators.eam.average_atom"], [14, "module-matscipy.calculators.eam.calculator"], [14, "module-matscipy.calculators.eam.io"], [15, "module-matscipy.calculators.manybody"], [15, "module-matscipy.calculators.manybody.explicit_forms.harmonic"], [16, "module-matscipy.calculators.mcfm"], [16, "module-matscipy.calculators.mcfm.calculator"], [16, "module-matscipy.calculators.mcfm.cluster_data"], [16, "module-matscipy.calculators.mcfm.qm_cluster"], [17, "module-matscipy.calculators.mcfm.mcfm_parallel"], [17, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"], [17, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"], [18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"], [18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"], [18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"], [19, "module-matscipy.calculators.mcfm.qm_cluster_tools"], [19, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"], [19, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"], [19, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"], [20, "module-matscipy.calculators.pair_potential"], [20, "module-matscipy.calculators.pair_potential.calculator"], [21, "module-matscipy.calculators.supercell_calculator"], [23, "module-matscipy.fracture_mechanics"], [23, "module-matscipy.fracture_mechanics.clusters"], [23, "module-matscipy.fracture_mechanics.crack"], [23, "module-matscipy.fracture_mechanics.crackpathsel"], [23, "module-matscipy.fracture_mechanics.energy_release"], [23, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "bccedge100110dislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation"]], "bccedge100dislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.BCCEdge100Dislocation"]], "bccedge111dislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.BCCEdge111Dislocation"]], "bccmixed111dislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.BCCMixed111Dislocation"]], "bccscrew111dislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.BCCScrew111Dislocation"]], "bodycenteredcubicoctahedralfactory (class in matscipy.dislocation)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory"]], "bodycenteredcubictetrahedralfactory (class in matscipy.dislocation)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory"]], "cubiccrystaldislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.CubicCrystalDislocation"]], "cubiccrystaldissociateddislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation"]], "diamondglide30degreepartial (class in matscipy.dislocation)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial"]], "diamondglide60degree (class in matscipy.dislocation)": [[1, "matscipy.dislocation.DiamondGlide60Degree"]], "diamondglide90degreepartial (class in matscipy.dislocation)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial"]], "diamondglidescrew (class in matscipy.dislocation)": [[1, "matscipy.dislocation.DiamondGlideScrew"]], "fccedge110dislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.FCCEdge110Dislocation"]], "fccedgeshockleypartial (class in matscipy.dislocation)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial"]], "fccscrew110dislocation (class in matscipy.dislocation)": [[1, "matscipy.dislocation.FCCScrew110Dislocation"]], "fccscrewshockleypartial (class in matscipy.dislocation)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial"]], "fixedlineatoms (class in matscipy.dislocation)": [[1, "matscipy.dislocation.FixedLineAtoms"]], "__init__() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.__init__"]], "__init__() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.__init__"]], "__init__() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.__init__"]], "__init__() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fixedlineatoms method)": [[1, "matscipy.dislocation.FixedLineAtoms.__init__"]], "adjust_forces() (matscipy.dislocation.fixedlineatoms method)": [[1, "matscipy.dislocation.FixedLineAtoms.adjust_forces"]], "adjust_positions() (matscipy.dislocation.fixedlineatoms method)": [[1, "matscipy.dislocation.FixedLineAtoms.adjust_positions"]], "align() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.align"]], "align() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.align"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.atoms_in_unit_cell"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.atoms_in_unit_cell"]], "basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.basis_factor"]], "basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.basis_factor"]], "bravais_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.bravais_basis"]], "bravais_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.bravais_basis"]], "build_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.build_cylinder"]], "build_glide_configurations() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.build_glide_configurations"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.build_impurity_cylinder"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.calc_num_atoms"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.calc_num_atoms"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.check_basis_volume"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.check_basis_volume"]], "check_duplicates() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.check_duplicates"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.chop_tolerance"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.chop_tolerance"]], "compare_configurations() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.compare_configurations"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.convert_to_natural_basis"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.convert_to_natural_basis"]], "cost_function() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.cost_function"]], "dipole_displacement_angle() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.dipole_displacement_angle"]], "displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.displacements"]], "displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.displacements"]], "displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.displacements"]], "displacements() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.displacements"]], "displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.displacements"]], "element_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.element_basis"]], "element_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.element_basis"]], "find_directions() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_directions"]], "find_directions() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_directions"]], "find_ortho() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_ortho"]], "find_ortho() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_ortho"]], "fit_core_position() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.fit_core_position"]], "fit_core_position_images() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.fit_core_position_images"]], "gamma_line() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.gamma_line"]], "get_centering_mask() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.get_centering_mask"]], "get_elastic_constants() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.get_elastic_constants"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.get_lattice_constant"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.get_lattice_constant"]], "get_u_img() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.get_u_img"]], "init_stroh() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.init_stroh"]], "inside() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inside"]], "inside() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inside"]], "int_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.int_basis"]], "int_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.int_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis_factor"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis_factor"]], "make_barrier_configurations() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.make_barrier_configurations"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_crystal_basis"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_crystal_basis"]], "make_edge_cyl() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.make_edge_cyl"]], "make_edge_cyl_001_100() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.make_edge_cyl_001_100"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_list_of_atoms"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_list_of_atoms"]], "make_screw_cyl() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.make_screw_cyl"]], "make_screw_cyl_kink() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.make_screw_cyl_kink"]], "make_screw_quadrupole() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.make_screw_quadrupole"]], "make_screw_quadrupole_kink() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.make_screw_quadrupole_kink"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_unit_cell"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_unit_cell"]], "matscipy.dislocation": [[1, "module-matscipy.dislocation"]], "other (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.other"]], "other (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.other"]], "ovito_dxa_straight_dislo_info() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.ovito_dxa_straight_dislo_info"]], "plot_bulk() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.plot_bulk"]], "plot_unit_cell() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.plot_unit_cell"]], "plot_vitek() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.plot_vitek"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.print_directions_and_miller"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.print_directions_and_miller"]], "process_element() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.process_element"]], "process_element() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.process_element"]], "put_atom() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.put_atom"]], "put_atom() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.put_atom"]], "read_dislo_qmmm() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.read_dislo_QMMM"]], "screw_cyl_octahedral() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.screw_cyl_octahedral"]], "screw_cyl_tetrahedral() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.screw_cyl_tetrahedral"]], "set_burgers() (matscipy.dislocation.bccedge100110dislocation method)": [[1, "matscipy.dislocation.BCCEdge100110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge100dislocation method)": [[1, "matscipy.dislocation.BCCEdge100Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111dislocation method)": [[1, "matscipy.dislocation.BCCEdge111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccmixed111dislocation method)": [[1, "matscipy.dislocation.BCCMixed111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccscrew111dislocation method)": [[1, "matscipy.dislocation.BCCScrew111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldislocation method)": [[1, "matscipy.dislocation.CubicCrystalDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[1, "matscipy.dislocation.CubicCrystalDissociatedDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide30degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide30degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide60degree method)": [[1, "matscipy.dislocation.DiamondGlide60Degree.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide90degreepartial method)": [[1, "matscipy.dislocation.DiamondGlide90degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglidescrew method)": [[1, "matscipy.dislocation.DiamondGlideScrew.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedge110dislocation method)": [[1, "matscipy.dislocation.FCCEdge110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedgeshockleypartial method)": [[1, "matscipy.dislocation.FCCEdgeShockleyPartial.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrew110dislocation method)": [[1, "matscipy.dislocation.FCCScrew110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrewshockleypartial method)": [[1, "matscipy.dislocation.FCCScrewShockleyPartial.set_burgers"]], "show_neb_configurations() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.show_NEB_configurations"]], "show_configuration() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.show_configuration"]], "slice_long_dislo() (in module matscipy.dislocation)": [[1, "matscipy.dislocation.slice_long_dislo"]], "xtal_name (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.xtal_name"]], "xtal_name (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[1, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.xtal_name"]], "cubicelasticmoduli (class in matscipy.elasticity)": [[2, "matscipy.elasticity.CubicElasticModuli"], [12, "matscipy.elasticity.CubicElasticModuli"]], "voigt_6_to_full_3x3_strain() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.Voigt_6_to_full_3x3_strain"], [12, "matscipy.elasticity.Voigt_6_to_full_3x3_strain"]], "voigt_6_to_full_3x3_stress() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.Voigt_6_to_full_3x3_stress"], [12, "matscipy.elasticity.Voigt_6_to_full_3x3_stress"]], "voigt_6x6_to_cubic() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.Voigt_6x6_to_cubic"], [12, "matscipy.elasticity.Voigt_6x6_to_cubic"]], "voigt_6x6_to_full_3x3x3x3() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.Voigt_6x6_to_full_3x3x3x3"], [12, "matscipy.elasticity.Voigt_6x6_to_full_3x3x3x3"]], "__init__() (matscipy.elasticity.cubicelasticmoduli method)": [[2, "matscipy.elasticity.CubicElasticModuli.__init__"], [12, "matscipy.elasticity.CubicElasticModuli.__init__"]], "compliance() (matscipy.elasticity.cubicelasticmoduli method)": [[2, "matscipy.elasticity.CubicElasticModuli.compliance"], [12, "matscipy.elasticity.CubicElasticModuli.compliance"]], "cubic_to_voigt_6x6() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.cubic_to_Voigt_6x6"], [12, "matscipy.elasticity.cubic_to_Voigt_6x6"]], "elastic_moduli() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.elastic_moduli"], [12, "matscipy.elasticity.elastic_moduli"]], "fit_elastic_constants() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.fit_elastic_constants"], [12, "matscipy.elasticity.fit_elastic_constants"]], "full_3x3_to_voigt_6_index() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.full_3x3_to_Voigt_6_index"], [12, "matscipy.elasticity.full_3x3_to_Voigt_6_index"]], "full_3x3_to_voigt_6_strain() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.full_3x3_to_Voigt_6_strain"], [12, "matscipy.elasticity.full_3x3_to_Voigt_6_strain"]], "full_3x3_to_voigt_6_stress() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.full_3x3_to_Voigt_6_stress"], [12, "matscipy.elasticity.full_3x3_to_Voigt_6_stress"]], "full_3x3x3x3_to_voigt_6x6() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.full_3x3x3x3_to_Voigt_6x6"], [12, "matscipy.elasticity.full_3x3x3x3_to_Voigt_6x6"]], "generate_strained_configs() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.generate_strained_configs"], [12, "matscipy.elasticity.generate_strained_configs"]], "invariants() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.invariants"], [12, "matscipy.elasticity.invariants"]], "matscipy.elasticity": [[2, "module-matscipy.elasticity"], [12, "module-matscipy.elasticity"]], "measure_triclinic_elastic_constants() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.measure_triclinic_elastic_constants"], [12, "matscipy.elasticity.measure_triclinic_elastic_constants"]], "nonaffine_elastic_contribution() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.nonaffine_elastic_contribution"], [12, "matscipy.elasticity.nonaffine_elastic_contribution"]], "poisson_ratio() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.poisson_ratio"], [12, "matscipy.elasticity.poisson_ratio"]], "rotate() (matscipy.elasticity.cubicelasticmoduli method)": [[2, "matscipy.elasticity.CubicElasticModuli.rotate"], [12, "matscipy.elasticity.CubicElasticModuli.rotate"]], "rotate_cubic_elastic_constants() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.rotate_cubic_elastic_constants"], [12, "matscipy.elasticity.rotate_cubic_elastic_constants"]], "rotate_elastic_constants() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.rotate_elastic_constants"], [12, "matscipy.elasticity.rotate_elastic_constants"]], "stiffness() (matscipy.elasticity.cubicelasticmoduli method)": [[2, "matscipy.elasticity.CubicElasticModuli.stiffness"], [12, "matscipy.elasticity.CubicElasticModuli.stiffness"]], "tol (matscipy.elasticity.cubicelasticmoduli attribute)": [[2, "matscipy.elasticity.CubicElasticModuli.tol"], [12, "matscipy.elasticity.CubicElasticModuli.tol"]], "youngs_modulus() (in module matscipy.elasticity)": [[2, "matscipy.elasticity.youngs_modulus"], [12, "matscipy.elasticity.youngs_modulus"]], "matscipy.fracture_mechanics": [[3, "module-matscipy.fracture_mechanics"], [23, "module-matscipy.fracture_mechanics"]], "cutoffneighbourhood (class in matscipy.neighbours)": [[4, "matscipy.neighbours.CutoffNeighbourhood"], [12, "matscipy.neighbours.CutoffNeighbourhood"]], "molecularneighbourhood (class in matscipy.neighbours)": [[4, "matscipy.neighbours.MolecularNeighbourhood"], [12, "matscipy.neighbours.MolecularNeighbourhood"]], "neighbourhood (class in matscipy.neighbours)": [[4, "matscipy.neighbours.Neighbourhood"], [12, "matscipy.neighbours.Neighbourhood"]], "__init__() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.__init__"], [12, "matscipy.neighbours.CutoffNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.__init__"], [12, "matscipy.neighbours.MolecularNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.__init__"], [12, "matscipy.neighbours.Neighbourhood.__init__"]], "complete_connectivity() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.complete_connectivity"], [12, "matscipy.neighbours.MolecularNeighbourhood.complete_connectivity"]], "compute_distances() (matscipy.neighbours.cutoffneighbourhood static method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.compute_distances"], [12, "matscipy.neighbours.CutoffNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.molecularneighbourhood static method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.compute_distances"], [12, "matscipy.neighbours.MolecularNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.neighbourhood static method)": [[4, "matscipy.neighbours.Neighbourhood.compute_distances"], [12, "matscipy.neighbours.Neighbourhood.compute_distances"]], "connected_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.connected_triplets"], [12, "matscipy.neighbours.CutoffNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.connected_triplets"], [12, "matscipy.neighbours.MolecularNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.connected_triplets"], [12, "matscipy.neighbours.Neighbourhood.connected_triplets"]], "double_connectivity() (matscipy.neighbours.molecularneighbourhood static method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.double_connectivity"], [12, "matscipy.neighbours.MolecularNeighbourhood.double_connectivity"]], "double_neighbourhood() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.double_neighbourhood"], [12, "matscipy.neighbours.CutoffNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.double_neighbourhood"], [12, "matscipy.neighbours.MolecularNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.double_neighbourhood"], [12, "matscipy.neighbours.Neighbourhood.double_neighbourhood"]], "find_common_neighbours() (in module matscipy.neighbours)": [[4, "matscipy.neighbours.find_common_neighbours"], [12, "matscipy.neighbours.find_common_neighbours"]], "find_indices_of_reversed_pairs() (in module matscipy.neighbours)": [[4, "matscipy.neighbours.find_indices_of_reversed_pairs"], [12, "matscipy.neighbours.find_indices_of_reversed_pairs"]], "find_triplet_types() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.find_triplet_types"], [12, "matscipy.neighbours.CutoffNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.find_triplet_types"], [12, "matscipy.neighbours.MolecularNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.find_triplet_types"], [12, "matscipy.neighbours.Neighbourhood.find_triplet_types"]], "get_pairs() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.get_pairs"], [12, "matscipy.neighbours.CutoffNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.get_pairs"], [12, "matscipy.neighbours.MolecularNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.get_pairs"], [12, "matscipy.neighbours.Neighbourhood.get_pairs"]], "get_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.get_triplets"], [12, "matscipy.neighbours.CutoffNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.get_triplets"], [12, "matscipy.neighbours.MolecularNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.get_triplets"], [12, "matscipy.neighbours.Neighbourhood.get_triplets"]], "lexsort() (matscipy.neighbours.cutoffneighbourhood static method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.lexsort"], [12, "matscipy.neighbours.CutoffNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.molecularneighbourhood static method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.lexsort"], [12, "matscipy.neighbours.MolecularNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.neighbourhood static method)": [[4, "matscipy.neighbours.Neighbourhood.lexsort"], [12, "matscipy.neighbours.Neighbourhood.lexsort"]], "make_result() (matscipy.neighbours.cutoffneighbourhood static method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.make_result"], [12, "matscipy.neighbours.CutoffNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.molecularneighbourhood static method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.make_result"], [12, "matscipy.neighbours.MolecularNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.neighbourhood static method)": [[4, "matscipy.neighbours.Neighbourhood.make_result"], [12, "matscipy.neighbours.Neighbourhood.make_result"]], "mask() (matscipy.neighbours.cutoffneighbourhood static method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.mask"], [12, "matscipy.neighbours.CutoffNeighbourhood.mask"]], "mask() (matscipy.neighbours.molecularneighbourhood static method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.mask"], [12, "matscipy.neighbours.MolecularNeighbourhood.mask"]], "mask() (matscipy.neighbours.neighbourhood static method)": [[4, "matscipy.neighbours.Neighbourhood.mask"], [12, "matscipy.neighbours.Neighbourhood.mask"]], "matscipy.neighbours": [[4, "module-matscipy.neighbours"], [12, "module-matscipy.neighbours"]], "mic() (in module matscipy.neighbours)": [[4, "matscipy.neighbours.mic"], [12, "matscipy.neighbours.mic"]], "molecules (matscipy.neighbours.molecularneighbourhood property)": [[4, "matscipy.neighbours.MolecularNeighbourhood.molecules"], [12, "matscipy.neighbours.MolecularNeighbourhood.molecules"]], "neighbour_list() (in module matscipy.neighbours)": [[4, "matscipy.neighbours.neighbour_list"], [12, "matscipy.neighbours.neighbour_list"]], "pair_type (matscipy.neighbours.molecularneighbourhood property)": [[4, "matscipy.neighbours.MolecularNeighbourhood.pair_type"], [12, "matscipy.neighbours.MolecularNeighbourhood.pair_type"]], "reverse_pair_indices() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.reverse_pair_indices"], [12, "matscipy.neighbours.CutoffNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.reverse_pair_indices"], [12, "matscipy.neighbours.MolecularNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.reverse_pair_indices"], [12, "matscipy.neighbours.Neighbourhood.reverse_pair_indices"]], "triplet_list() (in module matscipy.neighbours)": [[4, "matscipy.neighbours.triplet_list"], [12, "matscipy.neighbours.triplet_list"]], "triplet_to_numbers() (matscipy.neighbours.cutoffneighbourhood method)": [[4, "matscipy.neighbours.CutoffNeighbourhood.triplet_to_numbers"], [12, "matscipy.neighbours.CutoffNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.molecularneighbourhood method)": [[4, "matscipy.neighbours.MolecularNeighbourhood.triplet_to_numbers"], [12, "matscipy.neighbours.MolecularNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.neighbourhood method)": [[4, "matscipy.neighbours.Neighbourhood.triplet_to_numbers"], [12, "matscipy.neighbours.Neighbourhood.triplet_to_numbers"]], "triplet_type (matscipy.neighbours.molecularneighbourhood property)": [[4, "matscipy.neighbours.MolecularNeighbourhood.triplet_type"], [12, "matscipy.neighbours.MolecularNeighbourhood.triplet_type"]], "get_derivative_volume() (in module matscipy.numerical)": [[5, "matscipy.numerical.get_derivative_volume"]], "get_derivative_wave_vector() (in module matscipy.numerical)": [[5, "matscipy.numerical.get_derivative_wave_vector"]], "matscipy.numerical": [[5, "module-matscipy.numerical"]], "numerical_forces() (in module matscipy.numerical)": [[5, "matscipy.numerical.numerical_forces"]], "numerical_hessian() (in module matscipy.numerical)": [[5, "matscipy.numerical.numerical_hessian"]], "numerical_nonaffine_forces() (in module matscipy.numerical)": [[5, "matscipy.numerical.numerical_nonaffine_forces"]], "numerical_nonaffine_forces_reference() (in module matscipy.numerical)": [[5, "matscipy.numerical.numerical_nonaffine_forces_reference"]], "numerical_stress() (in module matscipy.numerical)": [[5, "matscipy.numerical.numerical_stress"]], "has_parameter() (in module matscipy)": [[6, "matscipy.has_parameter"], [12, "matscipy.has_parameter"]], "matscipy": [[6, "module-matscipy"], [12, "module-matscipy"]], "parameter() (in module matscipy)": [[6, "matscipy.parameter"], [12, "matscipy.parameter"]], "aligned (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.ALIGNED"]], "atomsrequesthandler (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.AtomsRequestHandler"]], "atomsserver (in module matscipy.socketcalc)": [[12, "matscipy.socketcalc.AtomsServer"]], "atomsserverasync (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.AtomsServerAsync"]], "atomsserversync (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.AtomsServerSync"]], "behaved (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.BEHAVED"]], "carray (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.CARRAY"]], "c_contiguous (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.C_CONTIGUOUS"]], "castepclient (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.CastepClient"]], "client (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.Client"]], "farray (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.FARRAY"]], "fnc (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.FNC"]], "forc (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.FORC"]], "f_contiguous (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.F_CONTIGUOUS"]], "logger (class in matscipy.logger)": [[12, "matscipy.logger.Logger"]], "millerdirection() (in module matscipy.surface)": [[12, "matscipy.surface.MillerDirection"]], "millerindex (class in matscipy.surface)": [[12, "matscipy.surface.MillerIndex"]], "millerplane() (in module matscipy.surface)": [[12, "matscipy.surface.MillerPlane"]], "owndata (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.OWNDATA"]], "qmclient (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.QMClient"]], "quipclient (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.QUIPClient"]], "socketcalculator (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.SocketCalculator"]], "t (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.T"]], "vaspclient (class in matscipy.socketcalc)": [[12, "matscipy.socketcalc.VaspClient"]], "writeable (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.WRITEABLE"]], "writebackifcopy (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.WRITEBACKIFCOPY"]], "__init__() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.__init__"]], "__init__() (matscipy.socketcalc.atomsrequesthandler method)": [[12, "matscipy.socketcalc.AtomsRequestHandler.__init__"]], "__init__() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.__init__"]], "__init__() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.__init__"]], "__init__() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.__init__"]], "__init__() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.__init__"]], "__init__() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.__init__"]], "__init__() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.__init__"]], "__init__() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.__init__"]], "__init__() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.__init__"]], "address_family (matscipy.socketcalc.atomsserverasync attribute)": [[12, "matscipy.socketcalc.AtomsServerAsync.address_family"]], "address_family (matscipy.socketcalc.atomsserversync attribute)": [[12, "matscipy.socketcalc.AtomsServerSync.address_family"]], "all() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.all"]], "all_brackets (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.all_brackets"]], "allow_reuse_address (matscipy.socketcalc.atomsserverasync attribute)": [[12, "matscipy.socketcalc.AtomsServerAsync.allow_reuse_address"]], "allow_reuse_address (matscipy.socketcalc.atomsserversync attribute)": [[12, "matscipy.socketcalc.AtomsServerSync.allow_reuse_address"]], "angle() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.angle"]], "angle_between() (in module matscipy.surface)": [[12, "matscipy.surface.angle_between"]], "angle_distribution() (in module matscipy.angle_distribution)": [[12, "matscipy.angle_distribution.angle_distribution"]], "any() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.any"]], "argmax() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.argmax"]], "argmin() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.argmin"]], "argpartition() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.argpartition"]], "argsort() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.argsort"]], "array_inverse() (in module matscipy.atomic_strain)": [[12, "matscipy.atomic_strain.array_inverse"]], "as3() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.as3"]], "as4() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.as4"]], "astype() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.astype"]], "atomic_strain() (in module matscipy.atomic_strain)": [[12, "matscipy.atomic_strain.atomic_strain"]], "band_structure() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.band_structure"]], "base (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.base"]], "block_on_close (matscipy.socketcalc.atomsserverasync attribute)": [[12, "matscipy.socketcalc.AtomsServerAsync.block_on_close"]], "brackets (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.brackets"]], "byteswap() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.byteswap"]], "calculate() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.calculate"]], "calculate_numerical_forces() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.calculate_properties"]], "calculation_required() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.calculation_required"]], "check_state() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.check_state"]], "choose() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.choose"]], "clip() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.clip"]], "close_request() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.close_request"]], "close_request() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.close_request"]], "compress() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.compress"]], "conj() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.conj"]], "conjugate() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.conjugate"]], "copy() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.copy"]], "cosine() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.cosine"]], "cross() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.cross"]], "ctypes (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.ctypes"]], "cumprod() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.cumprod"]], "cumsum() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.cumsum"]], "daemon_threads (matscipy.socketcalc.atomsserverasync attribute)": [[12, "matscipy.socketcalc.AtomsServerAsync.daemon_threads"]], "data (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.data"]], "default_parameters (matscipy.socketcalc.socketcalculator attribute)": [[12, "matscipy.socketcalc.SocketCalculator.default_parameters"]], "diagonal() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.diagonal"]], "directory (matscipy.socketcalc.socketcalculator property)": [[12, "matscipy.socketcalc.SocketCalculator.directory"]], "disable_nagle_algorithm (matscipy.socketcalc.atomsrequesthandler attribute)": [[12, "matscipy.socketcalc.AtomsRequestHandler.disable_nagle_algorithm"]], "discard_results_on_any_change (matscipy.socketcalc.socketcalculator attribute)": [[12, "matscipy.socketcalc.SocketCalculator.discard_results_on_any_change"]], "dot() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.dot"]], "dtype (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.dtype"]], "dump() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.dump"]], "dumps() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.dumps"]], "export_properties() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.export_properties"]], "extra_args() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.extra_args"]], "extra_args() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.extra_args"]], "extra_args() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.extra_args"]], "extra_args() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.extra_args"]], "extra_args() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.extra_args"]], "fileno() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.fileno"]], "fileno() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.fileno"]], "fill() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.fill"]], "finish() (matscipy.socketcalc.atomsrequesthandler method)": [[12, "matscipy.socketcalc.AtomsRequestHandler.finish"]], "finish_request() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.finish_request"]], "finish_request() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.finish_request"]], "flags (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.flags"]], "flat (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.flat"]], "flatten() (in module matscipy.logger)": [[12, "matscipy.logger.flatten"]], "flatten() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.flatten"]], "flush() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.flush"]], "gcd() (in module matscipy.surface)": [[12, "matscipy.surface.gcd"]], "get_d_square_min() (in module matscipy.atomic_strain)": [[12, "matscipy.atomic_strain.get_D_square_min"]], "get_xij() (in module matscipy.atomic_strain)": [[12, "matscipy.atomic_strain.get_XIJ"]], "get_yij() (in module matscipy.atomic_strain)": [[12, "matscipy.atomic_strain.get_YIJ"]], "get_atoms() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_atoms"]], "get_charges() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_charges"]], "get_default_parameters() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_default_parameters"]], "get_delta_plus_epsilon() (in module matscipy.atomic_strain)": [[12, "matscipy.atomic_strain.get_delta_plus_epsilon"]], "get_delta_plus_epsilon_dgesv() (in module matscipy.atomic_strain)": [[12, "matscipy.atomic_strain.get_delta_plus_epsilon_dgesv"]], "get_dipole_moment() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_dipole_moment"]], "get_forces() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_forces"]], "get_logfile() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.get_logfile"]], "get_magnetic_moment() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_potential_energy"]], "get_property() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_property"]], "get_request() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.get_request"]], "get_request() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.get_request"]], "get_results() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.get_results"]], "get_results() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.get_results"]], "get_stress() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_stress"]], "get_stresses() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.get_stresses"]], "getfield() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.getfield"]], "handle() (matscipy.socketcalc.atomsrequesthandler method)": [[12, "matscipy.socketcalc.AtomsRequestHandler.handle"]], "handle_error() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.handle_error"]], "handle_error() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.handle_error"]], "handle_request() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.handle_request"]], "handle_request() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.handle_request"]], "handle_timeout() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.handle_timeout"]], "handle_timeout() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.handle_timeout"]], "has_logfile() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.has_logfile"]], "hat() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.hat"]], "hdr_str() (in module matscipy.logger)": [[12, "matscipy.logger.hdr_str"]], "hdrfmt_str() (in module matscipy.logger)": [[12, "matscipy.logger.hdrfmt_str"]], "hydrogenate() (in module matscipy.hydrogenate)": [[12, "matscipy.hydrogenate.hydrogenate"]], "ignored_changes (matscipy.socketcalc.socketcalculator attribute)": [[12, "matscipy.socketcalc.SocketCalculator.ignored_changes"]], "imag (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.imag"]], "implemented_properties (matscipy.socketcalc.socketcalculator attribute)": [[12, "matscipy.socketcalc.SocketCalculator.implemented_properties"]], "is_compatible() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.is_compatible"]], "is_compatible() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.is_compatible"]], "item() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.item"]], "itemset() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.itemset"]], "itemsize (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.itemsize"]], "iteration_finished() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.iteration_finished"]], "join_all() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.join_all"]], "join_all() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.join_all"]], "label (matscipy.socketcalc.socketcalculator property)": [[12, "matscipy.socketcalc.SocketCalculator.label"]], "latex() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.latex"]], "make_unit_slab() (in module matscipy.surface)": [[12, "matscipy.surface.make_unit_slab"]], "matscipy.angle_distribution": [[12, "module-matscipy.angle_distribution"]], "matscipy.atomic_strain": [[12, "module-matscipy.atomic_strain"]], "matscipy.hydrogenate": [[12, "module-matscipy.hydrogenate"]], "matscipy.io": [[12, "module-matscipy.io"]], "matscipy.logger": [[12, "module-matscipy.logger"]], "matscipy.rings": [[12, "module-matscipy.rings"]], "matscipy.socketcalc": [[12, "module-matscipy.socketcalc"]], "matscipy.surface": [[12, "module-matscipy.surface"]], "max() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.max"]], "mean() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.mean"]], "min() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.min"]], "name (matscipy.socketcalc.socketcalculator attribute)": [[12, "matscipy.socketcalc.SocketCalculator.name"]], "nbytes (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.nbytes"]], "ndim (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.ndim"]], "newbyteorder() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.newbyteorder"]], "nonzero() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.nonzero"]], "norm() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.norm"]], "normalised() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.normalised"]], "numfmt_str() (in module matscipy.logger)": [[12, "matscipy.logger.numfmt_str"]], "pack_atoms_to_reftraj_str() (in module matscipy.socketcalc)": [[12, "matscipy.socketcalc.pack_atoms_to_reftraj_str"]], "pack_atoms_to_xyz_str() (in module matscipy.socketcalc)": [[12, "matscipy.socketcalc.pack_atoms_to_xyz_str"]], "pack_results_to_reftraj_output_str() (in module matscipy.socketcalc)": [[12, "matscipy.socketcalc.pack_results_to_reftraj_output_str"]], "parse() (matscipy.surface.millerindex class method)": [[12, "matscipy.surface.MillerIndex.parse"]], "partition() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.partition"]], "plane_spacing() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.plane_spacing"]], "postprocess() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.postprocess"]], "postprocess() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.postprocess"]], "postprocess() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.postprocess"]], "postprocess() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.postprocess"]], "postprocess() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.postprocess"]], "pr() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.pr"]], "preprocess() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.preprocess"]], "preprocess() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.preprocess"]], "preprocess() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.preprocess"]], "preprocess() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.preprocess"]], "preprocess() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.preprocess"]], "process_request() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.process_request"]], "process_request() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.process_request"]], "process_request_thread() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.process_request_thread"]], "prod() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.prod"]], "ptp() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.ptp"]], "put() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.put"]], "put() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.put"]], "put() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.put"]], "ravel() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.ravel"]], "rbufsize (matscipy.socketcalc.atomsrequesthandler attribute)": [[12, "matscipy.socketcalc.AtomsRequestHandler.rbufsize"]], "read() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.read"]], "read_atoms() (matscipy.socketcalc.socketcalculator class method)": [[12, "matscipy.socketcalc.SocketCalculator.read_atoms"]], "real (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.real"]], "repeat() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.repeat"]], "request_queue_size (matscipy.socketcalc.atomsserverasync attribute)": [[12, "matscipy.socketcalc.AtomsServerAsync.request_queue_size"]], "request_queue_size (matscipy.socketcalc.atomsserversync attribute)": [[12, "matscipy.socketcalc.AtomsServerSync.request_queue_size"]], "reset() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.reset"]], "reshape() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.reshape"]], "resize() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.resize"]], "ring_statistics() (in module matscipy.rings)": [[12, "matscipy.rings.ring_statistics"]], "round() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.round"]], "searchsorted() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.searchsorted"]], "serve_forever() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.serve_forever"]], "serve_forever() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.serve_forever"]], "server_activate() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.server_activate"]], "server_activate() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.server_activate"]], "server_bind() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.server_bind"]], "server_bind() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.server_bind"]], "server_close() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.server_close"]], "server_close() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.server_close"]], "service_actions() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.service_actions"]], "service_actions() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.service_actions"]], "set() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.set"]], "set_label() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.set_label"]], "set_logfile() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.set_logfile"]], "set_outevery() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.set_outevery"]], "setfield() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.setfield"]], "setflags() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.setflags"]], "setup() (matscipy.socketcalc.atomsrequesthandler method)": [[12, "matscipy.socketcalc.AtomsRequestHandler.setup"]], "shape (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.shape"]], "shutdown() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.shutdown"]], "shutdown() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.shutdown"]], "shutdown() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.shutdown"]], "shutdown() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.shutdown"]], "shutdown() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.shutdown"]], "shutdown() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.shutdown"]], "shutdown() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.shutdown"]], "shutdown() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.shutdown"]], "shutdown_clients() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.shutdown_clients"]], "shutdown_clients() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.shutdown_clients"]], "shutdown_request() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.shutdown_request"]], "shutdown_request() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.shutdown_request"]], "simplified() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.simplified"]], "simplify() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.simplify"]], "size (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.size"]], "socket_type (matscipy.socketcalc.atomsserverasync attribute)": [[12, "matscipy.socketcalc.AtomsServerAsync.socket_type"]], "socket_type (matscipy.socketcalc.atomsserversync attribute)": [[12, "matscipy.socketcalc.AtomsServerSync.socket_type"]], "sort() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.sort"]], "squeeze() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.squeeze"]], "st() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.st"]], "start() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.start"]], "start() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.start"]], "start() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.start"]], "start() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.start"]], "start() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.start"]], "start_or_restart() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.start_or_restart"]], "std() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.std"]], "strides (matscipy.surface.millerindex attribute)": [[12, "matscipy.surface.MillerIndex.strides"]], "sum() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.sum"]], "swapaxes() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.swapaxes"]], "take() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.take"]], "timeout (matscipy.socketcalc.atomsrequesthandler attribute)": [[12, "matscipy.socketcalc.AtomsRequestHandler.timeout"]], "timeout (matscipy.socketcalc.atomsserverasync attribute)": [[12, "matscipy.socketcalc.AtomsServerAsync.timeout"]], "timeout (matscipy.socketcalc.atomsserversync attribute)": [[12, "matscipy.socketcalc.AtomsServerSync.timeout"]], "tobytes() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.tobytes"]], "todict() (matscipy.socketcalc.socketcalculator method)": [[12, "matscipy.socketcalc.SocketCalculator.todict"]], "tofile() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.tofile"]], "tolist() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.tolist"]], "tostring() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.tostring"]], "trace() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.trace"]], "transpose() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.transpose"]], "unpack_reftraj_output_str_to_results() (in module matscipy.socketcalc)": [[12, "matscipy.socketcalc.unpack_reftraj_output_str_to_results"]], "unpack_reftraj_str_to_atoms() (in module matscipy.socketcalc)": [[12, "matscipy.socketcalc.unpack_reftraj_str_to_atoms"]], "unpack_xyz_str_to_results() (in module matscipy.socketcalc)": [[12, "matscipy.socketcalc.unpack_xyz_str_to_results"]], "var() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.var"]], "verify_request() (matscipy.socketcalc.atomsserverasync method)": [[12, "matscipy.socketcalc.AtomsServerAsync.verify_request"]], "verify_request() (matscipy.socketcalc.atomsserversync method)": [[12, "matscipy.socketcalc.AtomsServerSync.verify_request"]], "view() (matscipy.surface.millerindex method)": [[12, "matscipy.surface.MillerIndex.view"]], "wait_for_shutdown() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.wait_for_shutdown"]], "warn() (matscipy.logger.logger method)": [[12, "matscipy.logger.Logger.warn"]], "wbufsize (matscipy.socketcalc.atomsrequesthandler attribute)": [[12, "matscipy.socketcalc.AtomsRequestHandler.wbufsize"]], "write_input_files() (matscipy.socketcalc.castepclient method)": [[12, "matscipy.socketcalc.CastepClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.client method)": [[12, "matscipy.socketcalc.Client.write_input_files"]], "write_input_files() (matscipy.socketcalc.qmclient method)": [[12, "matscipy.socketcalc.QMClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.quipclient method)": [[12, "matscipy.socketcalc.QUIPClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.vaspclient method)": [[12, "matscipy.socketcalc.VaspClient.write_input_files"]], "eam (class in matscipy.calculators.eam.calculator)": [[14, "matscipy.calculators.eam.calculator.EAM"]], "eamparameters (class in matscipy.calculators.eam.io)": [[14, "matscipy.calculators.eam.io.EAMParameters"]], "__init__() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.__init__"]], "atomic_masses (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.atomic_masses"]], "atomic_numbers (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.atomic_numbers"]], "average_potential() (in module matscipy.calculators.eam.average_atom)": [[14, "matscipy.calculators.eam.average_atom.average_potential"]], "band_structure() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.band_structure"]], "calculate() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.calculate"]], "calculate_hessian_matrix() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.calculate_hessian_matrix"]], "calculate_numerical_forces() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.calculate_properties"]], "calculation_required() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.calculation_required"]], "check_state() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.check_state"]], "count() (matscipy.calculators.eam.io.eamparameters method)": [[14, "matscipy.calculators.eam.io.EAMParameters.count"]], "crystal_structures (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.crystal_structures"]], "cutoff (matscipy.calculators.eam.calculator.eam property)": [[14, "matscipy.calculators.eam.calculator.EAM.cutoff"]], "cutoff (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.cutoff"]], "default_parameters (matscipy.calculators.eam.calculator.eam attribute)": [[14, "matscipy.calculators.eam.calculator.EAM.default_parameters"]], "density_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.density_grid_spacing"]], "directory (matscipy.calculators.eam.calculator.eam property)": [[14, "matscipy.calculators.eam.calculator.EAM.directory"]], "discard_results_on_any_change (matscipy.calculators.eam.calculator.eam attribute)": [[14, "matscipy.calculators.eam.calculator.EAM.discard_results_on_any_change"]], "distance_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.distance_grid_spacing"]], "energy_virial_and_forces() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.energy_virial_and_forces"]], "export_properties() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.export_properties"]], "get_atoms() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_charges"]], "get_default_parameters() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_elastic_constants"]], "get_forces() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_forces"]], "get_hessian() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_potential_energy"]], "get_property() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_property"]], "get_stress() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.get_stresses"]], "ignored_changes (matscipy.calculators.eam.calculator.eam attribute)": [[14, "matscipy.calculators.eam.calculator.EAM.ignored_changes"]], "implemented_properties (matscipy.calculators.eam.calculator.eam attribute)": [[14, "matscipy.calculators.eam.calculator.EAM.implemented_properties"]], "index() (matscipy.calculators.eam.io.eamparameters method)": [[14, "matscipy.calculators.eam.io.EAMParameters.index"]], "label (matscipy.calculators.eam.calculator.eam property)": [[14, "matscipy.calculators.eam.calculator.EAM.label"]], "lattice_constants (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.lattice_constants"]], "matscipy.calculators.eam": [[14, "module-matscipy.calculators.eam"]], "matscipy.calculators.eam.average_atom": [[14, "module-matscipy.calculators.eam.average_atom"]], "matscipy.calculators.eam.calculator": [[14, "module-matscipy.calculators.eam.calculator"]], "matscipy.calculators.eam.io": [[14, "module-matscipy.calculators.eam.io"]], "mix_eam() (in module matscipy.calculators.eam.io)": [[14, "matscipy.calculators.eam.io.mix_eam"]], "name (matscipy.calculators.eam.calculator.eam attribute)": [[14, "matscipy.calculators.eam.calculator.EAM.name"]], "number_of_density_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.number_of_density_grid_points"]], "number_of_distance_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.number_of_distance_grid_points"]], "read() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.read"]], "read_atoms() (matscipy.calculators.eam.calculator.eam class method)": [[14, "matscipy.calculators.eam.calculator.EAM.read_atoms"]], "read_eam() (in module matscipy.calculators.eam.io)": [[14, "matscipy.calculators.eam.io.read_eam"]], "reset() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.reset"]], "set() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.set"]], "set_label() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.set_label"]], "symbols (matscipy.calculators.eam.io.eamparameters attribute)": [[14, "matscipy.calculators.eam.io.EAMParameters.symbols"]], "todict() (matscipy.calculators.eam.calculator.eam method)": [[14, "matscipy.calculators.eam.calculator.EAM.todict"]], "write_eam() (in module matscipy.calculators.eam.io)": [[14, "matscipy.calculators.eam.io.write_eam"]], "harmonicangle (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle"]], "harmonicbond (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond"]], "zeropair (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair"]], "zerotriplet (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet"]], "__abstractmethods__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__abstractmethods__"]], "__abstractmethods__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__abstractmethods__"]], "__abstractmethods__ (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.__abstractmethods__"]], "__abstractmethods__ (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.__abstractmethods__"]], "__annotations__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__annotations__"]], "__annotations__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__annotations__"]], "__annotations__ (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.__annotations__"]], "__annotations__ (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.__annotations__"]], "__call__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__call__"]], "__call__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__call__"]], "__call__() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.__call__"]], "__call__() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.__call__"]], "__dict__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__dict__"]], "__dict__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__dict__"]], "__dict__ (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.__dict__"]], "__dict__ (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.__dict__"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__init__"]], "__module__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__module__"]], "__module__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__module__"]], "__module__ (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.__module__"]], "__module__ (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.__module__"]], "__slots__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__slots__"]], "__slots__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__slots__"]], "__slots__ (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.__slots__"]], "__slots__ (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.__slots__"]], "__weakref__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__weakref__"]], "__weakref__ (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__weakref__"]], "__weakref__ (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.__weakref__"]], "__weakref__ (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet attribute)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.__weakref__"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.gradient"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[15, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.hessian"]], "matscipy.calculators.manybody": [[15, "module-matscipy.calculators.manybody"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[15, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "clusterdata (class in matscipy.calculators.mcfm.cluster_data)": [[16, "matscipy.calculators.mcfm.cluster_data.ClusterData"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm.calculator)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential"]], "qmcluster (class in matscipy.calculators.mcfm.qm_cluster)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster"]], "__init__() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.__init__"]], "__init__() (matscipy.calculators.mcfm.cluster_data.clusterdata method)": [[16, "matscipy.calculators.mcfm.cluster_data.ClusterData.__init__"]], "__init__() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.__init__"]], "all_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.all_changes"]], "attach_clustering_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_clustering_module"]], "attach_flagging_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_flagging_module"]], "attach_hybrid_data() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.attach_hybrid_data"]], "attach_neighbour_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_neighbour_list"]], "band_structure() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculation_required"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.carve_cluster"]], "check_state() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.check_state"]], "clustering_module (matscipy.calculators.mcfm.qm_cluster.qmcluster attribute)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.clustering_module"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.export_properties"]], "flagging_module (matscipy.calculators.mcfm.qm_cluster.qmcluster attribute)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.flagging_module"]], "forces (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[16, "matscipy.calculators.mcfm.cluster_data.ClusterData.forces"]], "get_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.label"]], "mark (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[16, "matscipy.calculators.mcfm.cluster_data.ClusterData.mark"]], "matscipy.calculators.mcfm": [[16, "module-matscipy.calculators.mcfm"]], "matscipy.calculators.mcfm.calculator": [[16, "module-matscipy.calculators.mcfm.calculator"]], "matscipy.calculators.mcfm.cluster_data": [[16, "module-matscipy.calculators.mcfm.cluster_data"]], "matscipy.calculators.mcfm.qm_cluster": [[16, "module-matscipy.calculators.mcfm.qm_cluster"]], "neighbour_list (matscipy.calculators.mcfm.qm_cluster.qmcluster attribute)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.neighbour_list"]], "print_message() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_qm_clusters"]], "qm_list (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[16, "matscipy.calculators.mcfm.cluster_data.ClusterData.qm_list"]], "read() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential class method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.reset"]], "reset_energized_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.reset_energized_list"]], "set() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[16, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.todict"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.update_qm_region"]], "verbose (matscipy.calculators.mcfm.qm_cluster.qmcluster attribute)": [[16, "matscipy.calculators.mcfm.qm_cluster.QMCluster.verbose"]], "get_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control)": [[17, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel": [[17, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[17, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[17, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "worker_populate_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker)": [[17, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.worker_populate_cluster_data"]], "neighbourlistbase (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase"]], "neighbourlistmcfm (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM"]], "__init__() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.__init__"]], "do_update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.do_update"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.get_neighbours"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[18, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.update"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[18, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.update"]], "baseqmclustertool (class in matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool"]], "qmclusteringtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool"]], "qmflaggingtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.__init__"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.__init__"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.__init__"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.carve_cluster"]], "complete_aromatic_rings() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.complete_aromatic_rings"]], "create_buffer_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_buffer_region"]], "create_cluster_around_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.create_cluster_around_atom"]], "create_cluster_from_marks() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_cluster_from_marks"]], "expand_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.expand_cluster"]], "exponential_moving_average() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.exponential_moving_average"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.find_neighbours"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.find_neighbours"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.find_neighbours"]], "get_energized_list() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.get_energized_list"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.hydrogenate_cluster"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_cluster"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.hydrogenate_cluster"]], "hydrogenate_dangling_bonds() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_dangling_bonds"]], "include_special_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.include_special_atom"]], "join_clusters() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.join_clusters"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[19, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "print_message() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.print_message"]], "replace_double_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_double_bond"]], "replace_single_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_single_bond"]], "update_avg_property_per_atom() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.update_avg_property_per_atom"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[19, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.update_qm_region"]], "beestkramersanten (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten"]], "cutoffinteraction (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.CutoffInteraction"]], "feneljcut (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.FeneLJCut"]], "lennardjones84 (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJones84"]], "lennardjonescut (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesCut"]], "lennardjoneslinear (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear"]], "lennardjonesquadratic (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic"]], "pairpotential (class in matscipy.calculators.pair_potential.calculator)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential"]], "__init__() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[20, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[20, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[20, "matscipy.calculators.pair_potential.calculator.FeneLJCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJones84.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.__init__"]], "band_structure() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.band_structure"]], "calculate() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.calculation_required"]], "check_state() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.check_state"]], "cutoff (matscipy.calculators.pair_potential.calculator.beestkramersanten property)": [[20, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.cutoffinteraction property)": [[20, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.feneljcut property)": [[20, "matscipy.calculators.pair_potential.calculator.FeneLJCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjones84 property)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJones84.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonescut property)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjoneslinear property)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic property)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.cutoff"]], "default_parameters (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.default_parameters"]], "derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[20, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[20, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[20, "matscipy.calculators.pair_potential.calculator.FeneLJCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJones84.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.derivative"]], "directory (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.export_properties"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[20, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[20, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[20, "matscipy.calculators.pair_potential.calculator.FeneLJCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJones84.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.first_derivative"]], "get_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_charges"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[20, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[20, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[20, "matscipy.calculators.pair_potential.calculator.FeneLJCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJones84.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.get_cutoff"]], "get_default_parameters() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_elastic_constants"]], "get_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_forces"]], "get_hessian() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energy"]], "get_property() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_property"]], "get_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stresses"]], "ignored_changes (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.implemented_properties"]], "label (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.label"]], "matscipy.calculators.pair_potential": [[20, "module-matscipy.calculators.pair_potential"]], "matscipy.calculators.pair_potential.calculator": [[20, "module-matscipy.calculators.pair_potential.calculator"]], "name (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.name"]], "read() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.read"]], "read_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential class method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.read_atoms"]], "reset() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.reset"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[20, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[20, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[20, "matscipy.calculators.pair_potential.calculator.FeneLJCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJones84.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[20, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.second_derivative"]], "set() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.set"]], "set_label() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.set_label"]], "todict() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[20, "matscipy.calculators.pair_potential.calculator.PairPotential.todict"]], "supercellcalculator (class in matscipy.calculators.supercell_calculator)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator"]], "__init__() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.__init__"]], "band_structure() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.band_structure"]], "calculate() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculation_required"]], "check_state() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.check_state"]], "default_parameters (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.default_parameters"]], "directory (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.export_properties"]], "get_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_atoms"]], "get_charges() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_dipole_moment"]], "get_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_forces"]], "get_magnetic_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_property"]], "get_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stress"]], "get_stresses() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.implemented_properties"]], "label (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.label"]], "matscipy.calculators.supercell_calculator": [[21, "module-matscipy.calculators.supercell_calculator"]], "name (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.name"]], "read() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.read"]], "read_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator class method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.read_atoms"]], "reset() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.reset"]], "set() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.set"]], "set_label() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.set_label"]], "todict() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[21, "matscipy.calculators.supercell_calculator.SupercellCalculator.todict"]], "constantstrainrate (class in matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.ConstantStrainRate"]], "cubiccrystalcrack (class in matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack"]], "g_to_strain() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.G_to_strain"]], "idealbrittlesolid (class in matscipy.fracture_mechanics.idealbrittlesolid)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid"]], "isotropicstressfield (class in matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.IsotropicStressField"]], "j_integral() (in module matscipy.fracture_mechanics.energy_release)": [[23, "matscipy.fracture_mechanics.energy_release.J_integral"]], "rectilinearanisotropiccrack (class in matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack"]], "sinclaircrack (class in matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack"]], "__init__() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[23, "matscipy.fracture_mechanics.crack.ConstantStrainRate.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[23, "matscipy.fracture_mechanics.crack.IsotropicStressField.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.__init__"]], "adjust_forces() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[23, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_forces"]], "adjust_positions() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[23, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_positions"]], "animate() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.animate"]], "apply_strain() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[23, "matscipy.fracture_mechanics.crack.ConstantStrainRate.apply_strain"]], "arc_length_continuation() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.arc_length_continuation"]], "band_structure() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.band_structure"]], "bcc() (in module matscipy.fracture_mechanics.clusters)": [[23, "matscipy.fracture_mechanics.clusters.bcc"]], "calculate() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate"]], "calculate_numerical_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_stress"]], "calculate_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_properties"]], "calculation_required() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculation_required"]], "check_state() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.check_state"]], "cluster() (in module matscipy.fracture_mechanics.clusters)": [[23, "matscipy.fracture_mechanics.clusters.cluster"]], "copy() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[23, "matscipy.fracture_mechanics.crack.ConstantStrainRate.copy"]], "crack_tip_position() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position"]], "crack_tip_position_y() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position_y"]], "default_parameters (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.default_parameters"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.deformation_gradient"]], "deformation_gradient_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cartesian_coordinates"]], "deformation_gradient_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cylinder_coordinates"]], "deformation_gradient_residual() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.deformation_gradient_residual"]], "deformation_gradient_residuals() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.deformation_gradient_residuals"]], "diamond() (in module matscipy.fracture_mechanics.clusters)": [[23, "matscipy.fracture_mechanics.clusters.diamond"]], "directory (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.directory"]], "discard_results_on_any_change (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.discard_results_on_any_change"]], "displacement_residual() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.displacement_residual"]], "displacement_residuals() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.displacement_residuals"]], "displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements"]], "displacements() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.displacements"]], "displacements_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cartesian_coordinates"]], "displacements_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cylinder_coordinates"]], "export_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.export_properties"]], "extend_strip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.extend_strip"]], "fcc() (in module matscipy.fracture_mechanics.clusters)": [[23, "matscipy.fracture_mechanics.clusters.fcc"]], "find_crack_tip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.find_crack_tip"]], "find_tip_broken_bonds() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.find_tip_broken_bonds"]], "find_tip_coordination() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.find_tip_coordination"]], "find_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.find_tip_stress_field"]], "find_triangles_2d() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.find_triangles_2d"]], "fit_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.fit_cle"]], "fit_crack_stress_field() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.fit_crack_stress_field"]], "get_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_atoms"]], "get_charges() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_charges"]], "get_crack_tip_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.get_crack_tip_force"]], "get_default_parameters() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_default_parameters"]], "get_dipole_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_dipole_moment"]], "get_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.get_dofs"]], "get_elastic_moduli() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_elastic_moduli"]], "get_energy_release_rate() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.get_energy_release_rate"]], "get_forces() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.get_forces"]], "get_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_forces"]], "get_k_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.get_k_force"]], "get_magnetic_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moments"]], "get_poisson_ratio() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_poisson_ratio"]], "get_potential_energies() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energies"]], "get_potential_energy() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.get_potential_energy"]], "get_potential_energy() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energy"]], "get_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.get_precon"]], "get_property() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_property"]], "get_strain() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.get_strain"]], "get_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stress"]], "get_stress_intensity_factor() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.get_stress_intensity_factor"]], "get_stresses() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[23, "matscipy.fracture_mechanics.crack.IsotropicStressField.get_stresses"]], "get_stresses() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stresses"]], "get_wave_speeds() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_wave_speeds"]], "get_xdot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.get_xdot"]], "get_youngs_modulus() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_youngs_modulus"]], "ignored_changes (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.ignored_changes"]], "implemented_properties (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.implemented_properties"]], "isotropic_modei_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_stress_field"]], "k1g() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1g"]], "k1g() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1g"]], "k1gsqg() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1gsqG"]], "k1gsqg() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1gsqG"]], "label (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.label"]], "matscipy.fracture_mechanics.clusters": [[23, "module-matscipy.fracture_mechanics.clusters"]], "matscipy.fracture_mechanics.crack": [[23, "module-matscipy.fracture_mechanics.crack"]], "matscipy.fracture_mechanics.crackpathsel": [[23, "module-matscipy.fracture_mechanics.crackpathsel"]], "matscipy.fracture_mechanics.energy_release": [[23, "module-matscipy.fracture_mechanics.energy_release"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[23, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "optimize() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.optimize"]], "pack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.pack"]], "plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.plot"]], "plot_stress_fields() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.plot_stress_fields"]], "print_crack_system() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.print_crack_system"]], "read() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read"]], "read_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid class method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read_atoms"]], "rescale_k() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.rescale_k"]], "reset() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.reset"]], "rtheta() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.rtheta"]], "sc() (in module matscipy.fracture_mechanics.clusters)": [[23, "matscipy.fracture_mechanics.clusters.sc"]], "scale_displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.scale_displacements"]], "set() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set"]], "set_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.set_atoms"]], "set_constraints() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.set_constraints"]], "set_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.set_dofs"]], "set_groups() (in module matscipy.fracture_mechanics.clusters)": [[23, "matscipy.fracture_mechanics.clusters.set_groups"]], "set_initial_velocities() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.set_initial_velocities"]], "set_label() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_label"]], "set_plane_strain() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_strain"]], "set_plane_stress() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_stress"]], "set_reference_crystal() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_reference_crystal"]], "set_regions() (in module matscipy.fracture_mechanics.clusters)": [[23, "matscipy.fracture_mechanics.clusters.set_regions"]], "strain_to_g() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.strain_to_G"]], "stresses() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses"]], "stresses() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[23, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.stresses"]], "stresses_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cartesian_coordinates"]], "stresses_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[23, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cylinder_coordinates"]], "thin_strip_displacement_y() (in module matscipy.fracture_mechanics.crack)": [[23, "matscipy.fracture_mechanics.crack.thin_strip_displacement_y"]], "todict() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.todict"]], "triangular_lattice_slab() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[23, "matscipy.fracture_mechanics.idealbrittlesolid.triangular_lattice_slab"]], "u_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.u_cle"]], "unpack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.unpack"]], "update_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.update_atoms"]], "update_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[23, "matscipy.fracture_mechanics.crack.SinclairCrack.update_precon"]]}})